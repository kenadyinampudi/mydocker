a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1646755746;s:8:"modified";i:1548792108;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:5:"title";s:61:"Host based storage migration  to Pure Storage -- Lincolnshire";s:11:"description";a:2:{s:15:"tableofcontents";a:4:{i:0;a:4:{s:3:"hid";s:60:"host_based_storage_migration_to_pure_storage_--_lincolnshire";s:5:"title";s:61:"Host based storage migration  to Pure Storage -- Lincolnshire";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:11:"preperation";s:5:"title";s:11:"Preperation";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:9:"migration";s:5:"title";s:9:"Migration";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:7:"cleanup";s:5:"title";s:7:"Cleanup";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:503:"Preperation

	*  Create change controls and get approvals necessary. [ In most cases - this is done by Storage team ]
	*  Figure out the storage requirement and email them to Storage team in advance.
		*  Login to the server
ssh <hostname>

		*  Define this function
function find_disks {
sudo /usr/local/scripts/lsvpcfg.sh | grep -v ^"Disk" | awk -F: '{if ($5!="2") print $0}' > lsvpcfg.out.1
echo "VG                   Count      Size(GB)"

for VG in $(awk -F: '{print $NF}' lsvpcfg.out.1 | sort -uâ€¦";}s:8:"relation";a:2:{s:10:"references";a:1:{s:28:"kapil:function2migraterootvg";b:1;}s:10:"firstimage";s:0:"";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:3:{s:4:"date";a:1:{s:7:"created";i:1646755746;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}