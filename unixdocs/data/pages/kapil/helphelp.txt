====== Redhat PABLSV02 Cobbler server build ======

  * Ask the wintel team to create a VM called pablsv02 with the following specifications<code>1Core, 8Gig RAM, 70Gig bootdisk, 100Gig datadisk and 10.32.6.0/24 vlan</code>
  * [[unix:buildredhat|Please follow the standard linux build instruction for pablsv02]]
  * Please create /var/www filesystem of size 50Gig<code>sudo pvcreate /dev/sdb
sudo vgcreate datavg01 /dev/sdb
sudo lvcreate -L 50G -n varwww /dev/datavg01
sudo mkfs -t ext4 /dev/datavg01/varwww
echo "/dev/mapper/datavg01-varwww   /var/www                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
sudo mkdir -p /var/www
sudo mount /var/www</code>

==== Now Patch the server to latest version in RHEL6 ====

  *Login to pablsv01
    *Copy the iso to the build server<code>sudo scp rhel-server-6.8-x86_64-dvd.iso pablsv01:/var/tmp/</code>
    *Loopback mount the iso file on build server<code>sudo mount /var/tmp/rhel-server-6.8-x86_64-dvd.iso /cdrom -t iso9660 -o loop</code>
    *rsync the contents to the sources directory<code>sudo mkdir -p /var/www/html/sources/rhel-6.8-x86_64</code><code>sudo rsync -a /cdrom/ /var/www/html/sources/rhel-6.8-x86_64/</code>
    *Create a repository<code>cd /var/www/html/sources/rhel-6.8-x86_64</code><code>sudo createrepo .</code>
    *Import the repository to Cobbler. 64 bit<code>sudo cobbler import --path=/var/www/html/sources/rhel-6.8-x86_64 --name=rhel-6.8-x86_64 --arch=x86_64</code>
    *Add a new profile or associate the latest RHEL distro to the RHEL profile.<code>sudo cobbler profile edit --name rhel-6.8-x86_64 --kickstart=/var/lib/cobbler/kickstarts/tenneco.rhel-6.8.ks</code>
    
  *Login to pablsv02
    *Modify the local.repo file with the latest repository. First make a copy<code>sudo cp /etc/yum.repos.d/local.repo local.repo</code><code>sudo vi /etc/yum.repos.d/local.repo</code>Remove everything except the following depending on the OS and type.<code>RHEL6 64 bit
[local-rhel-6.8-x86_64]
name=local-rhel-6.8-x86_64
baseurl=http://pablsv01/sources/rhel-6.8-x86_64/
enabled=1
gpgcheck=0</code><code>sudo yum clean all</code><code>sudo yum update</code><code>sudo init 6</code>

====Now setup cobbler on pablsv02====
==creation of cobbler==
  *Install createrepo<code>sudo yum install createrepo</code>
  *install http<code>sudo yum install httpd</code><code>sudo service httpd start</code>
  *Copy the iso to the build server<code>sudo scp rhel-server-6.8-x86_64-dvd.iso pablsv02:/var/tmp/</code>
  *Loopback mount the iso file on build server<code>sudo mount /var/tmp/rhel-server-6.8-x86_64-dvd.iso /cdrom -t iso9660 -o loop</code>
  *rsync the contents to the sources directory</code>sudo mkdir -p /var/www/html/sources/rhel-6.8-x86_64</code><code>sudo rsync -a /cdrom/ /var/www/html/sources/rhel-6.8-x86_64/</code>
  *Create a repository<code>cd /var/www/html/sources/rhel-6.8-x86_64</code><code>sudo createrepo .</code>
  *to enable proxy<code>sudo cp /etc/yum.conf /etc/yum.conf.10042016</code><code>sudo vi /etc/yum.conf</code>Do the entry in the last line of the file<code>proxy=http://170.64.0.72:8080
proxy_username=x1vasuna
proxy_password=*****</code>
  *Use proxy=none in local.repo file<code>cat local.repo
[local-rhel-6.8-x86_64]
name=local-rhel-6.8-x86_64
baseurl=http://pablsv02/sources/rhel-6.8-x86_64/
enabled=1
gpgcheck=0
proxy=_none_
[local-tenneco-noarch]
name=local-tenneco-noarch
baseurl=http://pablsv02/sources/tenneco-noarch/
enabled=1
gpgcheck=0
proxy=_none_</code>
  *Export proxy<code>export https_proxy=http://username:password@170.64.0.72:8080/
  *Enable epel repositroy<code>sudo rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</code>
  *Install Cobbler<code>sudo yum install cobbler</code>
  *perform cobbler check<code>sudo cobbler check</code>It will show <code>The following are potential configuration items that you may want to fix:

1 : The 'server' field in /etc/cobbler/settings must be set to something other than localhost, or kickstarting features will not work.  This should be a resolvable hostname or IP for the boot server as reachable by all machines that will use it.
2 : For PXE to be functional, the 'next_server' field in /etc/cobbler/settings must be set to something other than 127.0.0.1, and should match the IP of the boot server on the PXE network.
3 : change 'disable' to 'no' in /etc/xinetd.d/tftp
4 : some network boot-loaders are missing from /var/lib/cobbler/loaders, you may run 'cobbler get-loaders' to download them, or, if you only want to handle x86/x86_64 netbooting, you may ensure that you have installed a *recent* version of the syslinux package installed and can ignore this message entirely.  Files in this directory, should you want to support all architectures, should include pxelinux.0, menu.c32, elilo.efi, and yaboot. The 'cobbler get-loaders' command is the easiest way to resolve these requirements.
5 : change 'disable' to 'no' in /etc/xinetd.d/rsync
6 : file /etc/xinetd.d/rsync does not exist
7 : debmirror package is not installed, it will be required to manage debian deployments and repositories
8 : ksvalidator was not found, install pykickstart
9 : The default password used by the sample templates for newly installed machines (default_password_crypted in /etc/cobbler/settings) is still set to 'cobbler' and should be changed, try: "openssl passwd -1 -salt 'random-phrase-here' 'your-password-here'" to generate new one
10 : fencing tools were not found, and are required to use the (optional) power management features. install cman or fence-agents to use them

Restart cobblerd and then run 'cobbler sync' to apply changes.</code>Resolve the errors it shows in the above points.
  *Copy the file before doing any changes to the file<code>sudo cp /etc/cobbler/settings /etc/cobbler/settings.09232016.vn</code>Edit the file /etc/cobbler/settings<code>sudo vi /etc/cobbler/settings</code>search for the line which looks something like this server = 127.0.0.1 and replace it with the server name like it shown here<code>server = pablsv02</code>
  *Once the changes has been done restart the cobbler service<code>sudo service cobblerd restart</code>
  *And then sync the cobbler<code>sudo cobbler sync</code>
  *Import the distros make sure the all the directories are present<code>sudo cobbler import --path=/var/www/html/sources/rhel-6.8-x86_64 --name=rhel-6.8-x86_64 --arch=x86_64</code>
  *Create a profile associate it with a distro. The profiles were created and associated with each distro, 
hence the profiles were edited like this to have a customized kickstart file<code>sudo cobbler profile edit --name rhel-6.8-x86_64 --kickstart=/var/lib/cobbler/kickstarts/tenneco.rhel-6.8.ks</code>
  *Now register a client <code>sudo cobbler system add \
--name=salnxsv06 \
--profile=rhel-6.8-x86_64 \
--netboot-enabled=False \
--name-servers=10.32.8.53 \
--name-servers-search=amer.int.tenneco.com \
--gateway=10.32.6.1 \
--interface=eth0 \
--management=True \
--static=True \
--mac=00:0c:29:6e:ea:cf \
--ip-address=10.32.6.90 \
--netmask=255.255.255.0 \
--server=pablsv02.amer.int.tenneco.com</code>
  *Create the Boot ISO on pablsv02<code>sudo cobbler buildiso --systems="salnxsv06" --iso=/var/www/html/servers/salnxsv06.iso</code>
  *Copy the iso file to ISO datastore.
    * For all other systems, Login to pgnmsv01<code>sudo rsync -avv pablsv02:/var/www/html/servers/salnxsv06.iso /prod/images/bootisos/</code>
  * [[unix:vmware-install|VMWare ? Click here ]]

===Now create 7.2 cobbler list===
  *Copy the iso to the build server<code>sudo scp rhel-server-7.2-x86_64-dvd.iso pablsv02:/var/tmp/</code>
  *Loopback mount the iso file on build server<code>sudo mount /var/tmp/rhel-server-7.2-x86_64-dvd.iso /cdrom -t iso9660 -o loop</code>
  *No need to create repository here directly import to cobbler.64bit<code>sudo cobbler import --path=/cdrom --name=rhel-7.2-x86_64 --arch=x86_64</code>
  *Add a new profile or associate the latest RHEL distro to the RHEL profile.<code>sudo cobbler profile edit --name rhel-7.2-x86_64 --kickstart=/var/lib/cobbler/kickstarts/tenneco.rhel-7.ks</code>This should be present in ths kickstart file of RHEL7<code>auth  --useshadow  --enablemd5
bootloader --location=mbr
clearpart --all --initlabel
text
firewall --disabled
firstboot --disable
keyboard us
lang en_US
url --url=$tree
reboot --eject
rootpw --plaintext abc123
selinux --disabled
skipx
timezone --utc America/Chicago
install
zerombr
part /boot --fstype ext3 --size=1024 --ondisk=sda
part pv.01 --size=1 --grow --ondisk=sda
volgroup sysvg --pesize=65536 pv.01
logvol swap --fstype swap --name=swap --vgname=sysvg --size=8192
logvol /opt --fstype ext4 --name=opt --vgname=sysvg --size=6144
logvol / --fstype ext4 --name=root --vgname=sysvg --size=10240
logvol /home --fstype ext4 --name=home --vgname=sysvg --size=1024
logvol /tmp --fstype ext4 --name=tmp --vgname=sysvg --size=2048
logvol /var --fstype ext4 --name=var --vgname=sysvg --size=8192

$yum_repo_stanza

$SNIPPET('network_config')

%pre
$SNIPPET('log_ks_pre')
$SNIPPET('kickstart_start')
$SNIPPET('pre_install_network_config')
$SNIPPET('pre_anamon')
%end
#
%packages
@core
$SNIPPET('func_install_if_enabled')
$SNIPPET('puppet_install_if_enabled')
%end
#
%post
$SNIPPET('log_ks_post')
$yum_config_stanza
$SNIPPET('post_install_kernel_options')
$SNIPPET('post_install_network_config')
$SNIPPET('func_register_if_enabled')
$SNIPPET('puppet_register_if_enabled')
$SNIPPET('download_config_files')
$SNIPPET('koan_environment')
$SNIPPET('redhat_register')
$SNIPPET('cobbler_register')
# Enable post-install boot notification
$SNIPPET('post_anamon')
# Start final steps
$SNIPPET('kickstart_done')
# End final steps
%end</code>

  *Define the system and assign the correct profile - Sample intranet<code>sudo cobbler system add \
--name=salnxsv06 \
--profile=rhel-7.2-x86_64 \
--netboot-enabled=False \
--name-servers=10.32.8.53 \
--name-servers-search=amer.int.tenneco.com \
--gateway=10.32.6.1 \
--interface=eth0 \
--management=True \
--static=True \
--mac=00:0c:29:6e:ea:cf \
--ip-address=10.32.6.90 \
--netmask=255.255.255.0 \
--server=pablsv02.amer.int.tenneco.com</code>

  *Create the Boot ISO on pablsv02<code>sudo cobbler buildiso --systems="salnxsv06" --iso=/var/www/html/servers/salnxsv06.iso</code>
  *For all other systems, Login to pgnmsv01<code>sudo rsync -avv pablsv02:/var/www/html/servers/salnxsv06.iso /prod/images/bootisos/</code>
  * [[unix:vmware-install|VMWare ? Click here ]]
