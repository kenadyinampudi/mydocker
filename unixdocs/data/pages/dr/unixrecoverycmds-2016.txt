====== NA - LDC - Disaster Recovery Test AIX instructions (2016) ======

===== Introduction =====

  - [[secret:hmc2016creds|IBM contact details HMC details etc]]
===== What will IBM do ? =====

  - IBM will recover these systems
    * peerdb99
    * tapr1d01
    * teprbk01
    * taqa1d01 
  - IBM will also deliver a NIM server "nim"
  - We will recover systems in the order it is in Marek's Lotus notes database.

** When in doubt, ask **

{{:dr:whenindoubtask.jpg?400|}}

** Make sure you are on the DR host, not the production server ( don't do tickets in parallel / be extremly careful ) **

===== Configure NIM server =====

==== Define the post installation script (Kapil) ====

  - If not existing, create ssh keys.<code>sudo su -</code>Create keys<code>ssh-keygen -t rsa</code>Make a note of public keys and add it to post install script below.
  - Define DR post install script on the NIM server.<code>sudo mkdir -p /prod/nim/resources/scripts</code>Open vi editor<code>sudo vi /prod/nim/resources/scripts/postinstall.DR</code>Insert the following code<code>#!/usr/bin/ksh
# Backup important config files on the system
for file in /etc/filesystems /etc/exports /etc/hosts /etc/resolv.conf
do
  cp ${file} ${file}.copyforDR
done

cat /dev/null > /var/tmp/filesystems.modified
for fs in $(lsvgfs rootvg)
do
   grep -p ${fs}: /etc/filesystems >> /var/tmp/filesystems.modified
done

grep -p proc /etc/filesystems >> /var/tmp/filesystems.modified

cp /var/tmp/filesystems.modified /etc/filesystems

mv /etc/resolv.conf /etc/resolv.conf.OLD

# If a successful copy had been made, rename the exports file to prevent long boot times.

[[ -f /etc/exports.copyforDR ]] && mv /etc/exports /etc/exports.OLDD

# Disable CRON
rmitab cron


# Configure AIO on AIX 5.3
oslevel | grep ^"5.3" > /dev/null 2>&1
if [ ${?} -eq 0 ]
then
   chdev -l aio0 -a autoconfig=available
   mkdev -l aio0
fi

# Add public key from NBU appliance to each Unix server

echo 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAv8EzRJC/7X2mIkpnVFasEI6zNdwb28hu9LtE7oxBSxc6k3fKeIa0x6DmXA+U246Livk33Q4KrbPJvm1OfS52/tGQH7Y6mX8HZVWqOa3EiWccEZ7cTRYVN3im7aMR4iAfalDMQxuss7871lhi04n4RSyi4B31oJQsM6/rmA8No8IyA0i7dHHIp1uMSSf6jTwUNXXI7uNxiqM4Yh/gwbOL7GDE3boVBVjgFDupy9xSdYME9y7m3Ibi25bK8LnY5cL4I+sjsX4DVAUP/ZE/9580frEa7hec33N+mcRHuPCQIrmY/W16YPosDiQiZx9qtn6101PWGB6HYnoNj/aRQq6xiQ== SYM1105173' >> /root/.ssh/authorized_keys

##### WORK TO DO ######

# Add steps to automate /etc/hosts file to 
#
#

# Change itocroot password and root password to abc1234 using post install script
#
#

# Modify /etc/exports creation here
#
#

# Remove netbackup client
#
#

# Add public keys from DR NIM server for automatic login.
#  Add the keys here.
#</code>
  - Define it as a resource now<code>sudo nim -o define -t script -a server=master -a location=/prod/nim/resources/scripts/postinstall.DR postinstallDR</code>
==== Copy & prepare mksysbs ( Kapil ) ====

  - Copy the mksysbs from data domain<code>for mksysb in $(ls <mount_point_of_datadomain>)
do
   cp <datadomain>/${mksysb} /prod/nim/resources/mksysb/${mksysb}
done</code>
  - Unzip mksysb files<code>cd /prod/nim/resources/mksysb
for mksysb in $(ls )
do
   gunzip ${mksysb}
done</code>
  - Define the mksysb resources<code>for file in $(ls -1 /prod/nim/resources/mksysb | grep "bos.obj" )
do
   host=$(echo ${file} | sed "s;bos.obj.;;g")
   nim -o define -t mksysb -a server=master -a location=/prod/nim/resources/mksysb/${file} ${host}-mksysb
done</code>

==== Deploy the DR hosts file, define network and hosts ====

  - Install the latest hosts file on NIM server<code>cp /etc/hosts /etc/hosts.copyforDR</code><code>sudo vi /etc/hosts</code>Paste these in there [[dr:2016-host-file-v2|DR hosts file - 2016 DR test]]
  - Define the DR network NIM resource
    - 10.39.11/24 network<code>sudo nim -o define -t ent -a net_addr=10.39.11.0 -a snm=255.255.255.0 -a routing1="default 10.39.11.1" ent-10-39-11-0</code>
    - 10.39.1/24 network**Probably not required**<code>sudo nim -o define -t ent -a net_addr=10.39.1.0 -a snm=255.255.255.0 -a routing1="default 10.39.1.1" ent-10-39-1-0</code>
  - Define the hosts on NIM server<code>for file in $(ls /prod/nim/resources/mksysb )
do
   host=$(echo ${file} | sed "s;bos.obj.;;g")
   nim -o define -t standalone -a platform=chrp -a if1="find_net ${host} 0" -a netboot_kernel=mp ${host}
done</code>

==== Create NTP server on the NIM server ====

  - Create NTP server on NIM server
    - Edit config file<code>cp /etc/ntp.conf /etc/ntp.conf.copyforDR</code><code>vi /etc/ntp.conf</code>Add these lines - replacing everything else<code>server 127.127.1.0
fudge 127.127.1.0 stratum 9
driftfile /etc/ntp.drift
tracefile /etc/ntp.trace</code>
  - Start NTP daemons<code>chrctcp -S -a xntpd</code>

** When in doubt, ask **

{{:dr:whenindoubtask.jpg?400|}}

** Make sure you are on the DR host, not the production server ( don't do tickets in parallel / be extremely careful ) **
===== AIX server recovery steps =====

==== Perform the NIM installation ====

  - Pick your server, update the DR database
  - Perform a NIM installation using the following resources
    * LPPSRC of the server's OS level 
    * SPOT of the server's OS level
    * mksysb of the server
    * "postinstallDR" post installation script
  - After the mksysb installation, perform the following steps
  - {{:dr:areyousure.png?100|}}
  - ** Make sure you are on the DR host **
  - ** Are you sure you are on the DR host ??? **
  - ** Are you really sure you are on the DR host ??? **
  - Continue ......
  - Login as root on the console.
  - Change PS1 variable. Make a backup copy<code>sudo cp /etc/profile /etc/profile.copyforDR</code>Then<code>sudo vi /etc/profile</code>Add this towards the end ( last line )<code>HOST=$(uname -n)
PS1='DR test -- $HOST:$PWD>'</code>
  - Get a copy of /etc/hosts from NIM server<code>sudo cp /etc/hosts /etc/hosts.Old
sudo scp 10.39.11.37:/etc/hosts /etc/hosts</code>
  - Enable NTP. Stop daemon<code>sudo stopsrc -s xntpd</code>Backup the config<code>sudo mv /etc/ntp.conf /etc/ntp.conf.DRtest</code>Put the new config<code>echo "driftfile /etc/ntp.drift" | sudo tee /etc/ntp.conf
echo "tracefile /tmp/xntpd.trace" | sudo tee -a /etc/ntp.conf
echo "server nim"  | sudo tee -a /etc/ntp.conf</code>Start the daemons<code>sudo chrctcp -S -a xntpd</code>Set the correct time from NIM server<code>date ; sudo ntpdate -u nim ; date</code>
  - Check cron<code>ps -ef | grep cron</code>It should not be running.
  - Change itocroot password<code>echo "itocroot:ka95aLbJ7WER6" | chpasswd -e
pwdadm -c itocroot</code>Password will now be "abcd1234"
  - Check the timezone from filesystems.txt and make sure it matches<code>grep TZ /etc/environment</code>Now compare it to the filesystems.txt<code>grep -i tz /usr/local/scripts/file_systems.txt</code>
  - Find out the required space on datavgs, create them
    - To resolve EMC serial numbers to hdiskpowers, use this script<code>sudo /usr/local/scripts/lsvpcfg.sh</code>
    - Always create big VGs<code>sudo mkvg -B -s 512 -y <vgname> hdiskX hdiskY ......</code>
  - Create filesystems<code>egrep "^mkdir|^mount|^crfs|^chown|^chmod" /usr/local/scripts/file_systems.txt > /var/tmp/crfs.sh</code>Now execute the script<code>sudo ksh -x /var/tmp/crfs.sh</code>
  - Make sure all filesystems are mounted<code>lsvg -o | grep -v rootvg | xargs -n1 lsvg -l | grep -i closed</code>Make sure there are no closed volumes.
  - Fix /etc/exports<code>cat /etc/exports.copyforDR | sed "s;bck;;g" > /var/tmp/exports.modified
[[ ${?} -eq 0 ]] && cp /var/tmp/exports.modified /etc/exports</code>
  - Remove Netbackup software<code>installp -u SYMCnbclt SYMCnbjava SYMCnbjre SYMCnbclt SYMCnbjava SYMCnbjre</code>
  - If your are recovering an Oracle database server, configure IOCP<code>sudo chdev -l iocp0 -a autoconfig=available</code>Make it available<code>sudo mkdev -l iocp0</code>
  - Perform a reboot<code>sudo shutdown -Fr</code>
  - Mirror rootvg. Find out the second SCSI/SAS ( internal ) disk<code>sudo extendvg rootvg hdiskZ
sudo mirrorvg -c2 rootvg
sudo bosboot -ad /dev/hdiskX
sudo bosboot -ad /dev/hdiskY
sudo bootlist -m normal hdiskX hdiskY</code>Ofcourse replace "X" & "Y" with the hdisk number.
  - Make sure /usr/openv is at least 6Gig in size.<code>sudo chfs -a size=6G /usr/openv</code>

** When in doubt, ask **

{{:dr:whenindoubtask.jpg?400|}}

** Make sure you are on the DR host, not the production server ( don't do tickets in parallel / be extremly careful ) **

====== At 8:00 PM mount all NFS filesystems ======

  - Add the NFS filesystems back. **Deferred until all systems have been recovered **<code>echo "" >> /etc/filesystems
grep -p nfs /etc/filesystems.copyforDR | sed "s;bck;;g" >> /etc/filesystems</code>
  - Mount all filesystems<code>lsnfsmnt | awk '{if ($(NF-1) == "yes") print $0}' | awk '{print $1}' | sort  | xargs -n1 sudo mount</code>

====== NFS mounts on each PTA app servers ======

** NFS mounts may need to remounted as the sequence of server restores may not be correct. Some CLIs listed here will be handy ** 

  - Forcefully unmount the filesystems<code>sudo umount -f <mountpoint></code>
  - Remove a filesystem from /etc/filesystems<code>rmnfsmnt -f <nfs_mount_name></code>
  - Mount the ones from tapr1d01<code>echo "/sapmnt/PTA/exe /sapmnt/PTA/global /sapmnt/PTA/profile /usr/sap/trans /ADK " | xargs -n1 sudo mount</code>

** When in doubt, ask **

{{:dr:whenindoubtask.jpg?400|}}

** Make sure you are on the DR host, not the production server ( don't do tickets in parallel / be extremly careful ) **