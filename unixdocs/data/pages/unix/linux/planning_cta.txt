====== Building a Virtual Machine in the SAP VMWARE cluster for CTA ======

  - Login to vSphere using fat client or web client and point to "taitc176"
  - On the address space click and select "Hosts and Clusters"
  - On the left hand pane, select "ITC-SAP Cluster"
  - Right click on the "ITC-SAP Cluster" --> Click on New Virtual Machine --> 
    - Select Custom and click next --> Select "Linux Servers" and click Next --> 
      - Select one of the datastores that has space click next --> Select Virtual Machine Version 11 --> 
        - Choose "Linux" and "Redhat Enterprise Linux 7 (64 bit) click next --> Select the number of cores/sockets --> 
          - Select correct amount of memory --> Select the correct VLAN --> Select VMWARE Paravirtual SCSI controller --> 
            - Create a New disk --> Enter 70G size **select Thin provision** --> Click next on the next screen --> 
              - Check edit settings and click Continue --> At the edit screen Add an additional thin provisioned disk for paging space --> 
                - Add an additional disk for data storage "SAP app servers 34G " --> 
                  - On the Options window, enable "Memory/CPU Hotplug" --> 
                    - Change the Boot options to "10000" --> Click Finish

  * Add the server to the console database **/prod/images/etc/unix_sys_console** on pgnmsv01.<code>sudo vi /prod/images/etc/unix_sys_console</code>Sample entry would be<code>daerap01h:std-vmware-vsphere:taitc176:ADACCOUNT</code>
  * [[kapil:notesesx|Login to the respective VSphere Server]]
  * Document the MAC address for the VM
      * Find the VM --> Right click --> Edit Settings --> Select Network adapter 1 (Hardware Tab) --> You will see the MAC address to the right.
  * Add the server to cobbler
    * Login to pablsv02
    * Set some variables specific to the system
      * The server that is being built<code>export host2build=daerap01h</code>
      * The server's IP Address<code>export ipaddr=10.0.48.19</code>
      * The server's netmask<code>export netmask=255.255.255.0</code>If different, change it.
      * The server's default gateway<code>export gateway=10.0.48.1</code>
      * The server's MAC address<code>export mac_addr=00:50:56:86:61:8f</code>
      * RHEL 7.2 for SAP<code>export profile=sap_rhel-7.2-x86_64</code>


    * Define the system in cobbler. Sample intranet
    * Command Line method<code>sudo cobbler system add \
--name=${host2build} \
--profile=${profile} \
--netboot-enabled=False \
--name-servers=10.32.8.53 \
--name-servers-search=amer.int.tenneco.com \
--gateway=${gateway} \
--interface=eth0 \
--management=True \
--static=True \
--mac=${mac_addr} \
--ip-address=${ipaddr} \
--netmask=${netmask} \
--server=pablsv02.amer.int.tenneco.com</code>Check the return code<code>echo ${?}</code>

  * Create the Boot ISO on pablsv02<code>sudo cobbler buildiso --systems="${host2build}" --iso=/var/www/html/servers/${host2build}.iso</code>
  * Copy the iso file to ISO datastore. Make a note of the hostname<code>echo ${host2build}</code>
    * Login to pgnmsv01<code>sudo rsync -avv pablsv02:/var/www/html/servers/daerap01h.iso /prod/images/bootisos/</code>



====== VMWare Guest installation process ======
 
  * Login to vSphere client and perform these configurations
    * Change boot options so that it gives us 10 seconds before boot.
      * Select the VM
        * Right click ''Edit Settings''
          * Click on ''Options'' Tab
            * Select Boot Options
              * Enter ''10,000'' as the Boot delay.
    * Mount the ISO file to Virtual CDROM
      * At the Hardware Tab Click on CDROM
        * Click and browse Datastore ISO file
          * Select the iso file we copied.
  * Open the console from vSphere
  * Power on the server
  * If using Virtual CDROM to access an iso file on your desktop,
    * Open the console and map the cdrom drive to the downloaded iso file in your desktop.
    * When the system boots from the ISO, press down arrow and select the hostname in the menu and hit enter.
  * When the VM startup using ''down arrow'' key select the hostname and hit enter. This will start the installation.


====== Redhat Server Post installation work ======

==== Steps from the server that is being built ====

  - Login to the server (as root) you just built<code>sudo ssh daerap01h</code>
  - Correct hostname. Cobbler sometimes reverse lookup the IP and set up the hostname. So a DNS error can change the hostname<code>echo $(uname -n | awk -F"." '{print $1}' ) > /etc/hostname</code>Also edit hosts file<code>sudo vi /etc/hosts</code>Remove the ipv6 line<code>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</code>And add a line for the host itself. Something like<code>10.0.48.19      daerap01h</code>
  - Change PS1 variable<code>sudo vi /etc/profile</code>Add this to last line of the profile<code>
PS1="$LOGNAME on "`hostname`":"'$PWD $ ' 
export PS1</code>
  - Remove the Redhat repository<code>sudo rm /etc/yum.repos.d/rhel-source.repo /etc/yum.repos.d/cobbler-config.repo</code>
  - [[unix:setupresolv.conf|Setup resolv.conf]]
  - Setup the correct timezone. For e.g. North America / Chicago<code>sudo timedatectl set-timezone America/Chicago</code>


  - Check the time server<code>sudo ntpdate -d time.amer.int.tenneco.com</code>If the offset is greater than 1000 seconds, manually adjust the time and run the ntpdate command again.
  - Need to install ntp in RHEL7<code>sudo yum install ntp -y</code>
  - Replace the config file with this. Make a backup<code>sudo cp /etc/ntp.conf /etc/ntp.conf.$(date +%Y%m%d)</code>Edit the file<code>sudo vi /etc/ntp.conf</code>Remove all lines in this file and replace with the following.
    - North American servers Fill in these<code># Customized for Tenneco
fudge   127.127.1.0 stratum 10
driftfile /var/lib/ntp/drift
keys /etc/ntp/keys
server time.amer.int.tenneco.com prefer
server time.emea.int.tenneco.com
server time.aspa.int.tenneco.com</code>
    - European servers Fill in these<code># Customized for Tenneco
fudge   127.127.1.0 stratum 10
driftfile /var/lib/ntp/drift
keys /etc/ntp/keys
server time.emea.int.tenneco.com prefer
server time.amer.int.tenneco.com
server time.aspa.int.tenneco.com</code>
  - Start using the XNTPD daemon
    - For RHEL7
      - Stop and remove chronyd<code>sudo systemctl disable chronyd</code>
      - <code>sudo systemctl stop chronyd</code>
      - <code>sudo yum remove chrony</code>
      - <code>sudo timedatectl set-ntp yes</code>
      - Enable NTPD<code>sudo systemctl enable ntpd</code>
      - Check it<code>sudo systemctl status ntpd</code>
      - Start it<code>sudo systemctl start ntpd</code>
      - Make sure its running<code>sudo systemctl status ntpd</code>For e.g.<code>● ntpd.service - Network Time Service
   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)
   Active: active (running) since Mon 2016-11-21 11:10:04 CST; 1s ago
  Process: 10607 ExecStart=/usr/sbin/ntpd -u ntp:ntp $OPTIONS (code=exited, status=0/SUCCESS)
 Main PID: 10608 (ntpd)
   CGroup: /system.slice/ntpd.service
           └─10608 /usr/sbin/ntpd -u ntp:ntp -g

Nov 21 11:10:04 xaerap02 ntpd[10608]: ntp_io: estimated max descriptors: 1024, initial socket boundary: 16
Nov 21 11:10:04 xaerap02 ntpd[10608]: Listen and drop on 0 v4wildcard 0.0.0.0 UDP 123
Nov 21 11:10:04 xaerap02 ntpd[10608]: Listen and drop on 1 v6wildcard :: UDP 123
Nov 21 11:10:04 xaerap02 ntpd[10608]: Listen normally on 2 lo 127.0.0.1 UDP 123
Nov 21 11:10:04 xaerap02 ntpd[10608]: Listen normally on 3 eth0 10.32.6.202 UDP 123
Nov 21 11:10:04 xaerap02 ntpd[10608]: Listening on routing socket on fd #20 for interface updates
Nov 21 11:10:04 xaerap02 ntpd[10608]: 0.0.0.0 c016 06 restart
Nov 21 11:10:04 xaerap02 ntpd[10608]: 0.0.0.0 c012 02 freq_set kernel 0.000 PPM
Nov 21 11:10:04 xaerap02 ntpd[10608]: 0.0.0.0 c011 01 freq_not_set
Nov 21 11:10:05 xaerap02 ntpd[10608]: 0.0.0.0 c614 04 freq_mode</code>
  - Check the date<code>date</code>
  - If there is an offset, correct it<code>sudo ntpdate -u time.amer.int.tenneco.com</code>
  - Ensure the timeserver is correct<code>sudo ntpdc -l
client    taitc533.amer.int.tenneco.com
client    10.56.1.53
client    taitc535.aspa.int.tenneco.com</code>



====== Create /var/adm/.information file======
  - Create the file /var/adm/.information e.g.<code>sudo mkdir -p /var/adm ;sudo vi /var/adm/.information</code>Enter these details
<code>mksysbhost:
drmksysbhost:
location:Lincolnshire
rack:
virtual:
virtualization:
physhost:
appname:SAP ERP CTA
role:SAP CTA ERP App Server
Contacts:Scott Ready, David Morris, Paul Burke,Thomas Jacob,Eric Van Asbroeck,Henk Kiewiet,David Lei,Sugar Tang,Claudio Baccaro,Eugenia de la Cruz,Edson Martos, Robin Kuhn, Inge Pinnoy, Hilde Gybels, Todd Davis
function:D
asset owner:GIOS UNIX Group
asset owner email:ta-unix@tenneco.com
asset owner phone:+1-847-482-6440
application owner:GIOS SAP BASIS
department:GIOS
status:Active
part number:
vendor Service Tag:N/A
express code:N/A
company asset tag:N/A
cage/room:LDC Datacenter
rack position:
private IP: N/A
mac address:
wwn:
warrenty start date:
warrenty end date:
warrenty number:
warrenty type:24x7x4
maintenance start date:
maintenance end date:
maintenance number:
maintenance type: 24x7x4
vendor:Red Hat
classification level:Medium
business criticality:Medium</code>


  - Install AIDE <code>sudo yum -y install aide</code>
  - Schedule standard cron jobs<code>sudo crontab -e</code>Add these<code>03 03 * * 6 /usr/local/scripts/clean_var 1>/dev/null 2>&1
30 23 * * 6 /usr/local/scripts/rpt_config.sh 1>/dev/null 2>&1</code>
  - On VMWare VMs, 
    - <code>sudo yum install -y open-vm-tools</code>
  - Install and configure SNMPD<code>sudo yum install net-snmp -y</code>Configure it<code>sudo mv /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.Original
sudo vi /etc/snmp/snmpd.conf</code>Add this config<code>syslocation Server Room
syscontact Sysadmin (root@localhost)

rocommunity oicu812 10.32.8.187 
trapsink   10.32.8.187   oicu812
trap2sink  10.32.8.37   oicu812</code>
  - Start snmpd
      - Enable it<code>sudo systemctl enable snmpd</code>
      - Start it<code>sudo systemctl start snmpd</code>
      - Check it<code>sudo systemctl status snmpd</code>

==== Steps from the Master server (pgnmsv01) ====

  - Login to pgnmsv01
  - Set a variable for the server you are building<code>export server_tenneco=daerap01h</code>
  - For some of our favorite team members, we also copy the ssh keys for them.<code>for user in sxp8856 x1jhz999 pawetkac tauxrpt x1kxk630 x1shukla x1vasuna x1rzb826 x1cxs952 x1nithsa
do
   sudo rsync -a /home/${user}/.profile ${server_tenneco}:/home/${user}/.profile
   sudo rsync -a /home/${user}/.ssh/ ${server_tenneco}:/home/${user}/.ssh/
done</code>
  - On VMWare VMs, 
    - Install SYMCquiesce, SYMCquiesce is a utility to quiesce the IO during a snapshopt backup.<code>sudo rsync -avv /prod/images/applications/netbackup-vm/SYMCquiesce-1.0.0-003.x86_64.rpm ${server_tenneco}:/var/tmp/
sudo ssh ${server_tenneco} rpm -Uvh /var/tmp/SYMCquiesce-1.0.0-003.x86_64.rpm</code>
  - Install xinetd<code>sudo ssh ${server_tenneco} yum -y install xinetd</code>
    - For RHEL7
      - Enable it<code>sudo ssh ${server_tenneco} "systemctl enable xinetd"</code>
      - Start it<code>sudo ssh ${server_tenneco} "systemctl start xinetd"</code>
      - Check it<code>sudo ssh ${server_tenneco} "systemctl status xinetd"</code>

====== Install sysinter ======

  - Make this directory<code>sudo ssh ${server_tenneco} mkdir -p /usr/local/bin</code>
  - Copy this<code>sudo rsync -avv /prod/images/applications/csi/sysinter.redhat ${server_tenneco}:/usr/local/bin/sysinter.redhat</code>
  - Then do this<code>sudo ssh ${server_tenneco} 'echo "sysinter                40035/tcp" | tee -a /etc/services'</code>
  - Then do this<code>sudo rsync -avv /prod/images/applications/csi/sysinter-xinetd ${server_tenneco}:/etc/xinetd.d/sysinter-xinetd</code>
  - Now restart inetd
    - For RHEL7<code>sudo ssh ${server_tenneco} systemctl reload xinetd</code>

  - Install cfg2html<code>sudo ssh ${server_tenneco} yum -y install cfg2html-linux-2.66-2.noarch</code>
  - Install Korn shell<code>sudo ssh ${server_tenneco} yum -y install ksh
sudo ssh ${server_tenneco} ln -s /bin/ksh /usr/bin/ksh</code>
  - Install these libraries for openview and Unix<code>sudo ssh ${server_tenneco} yum -y install libgcc.i686 libstdc++.i686 compat-libstdc++-33.i686 psmisc-22.20-9.el7.x86_64</code>
  - Copy the scripts<code>sudo ssh ${server_tenneco} mkdir -p /usr/local/scripts
sudo rsync -a /usr/local/scripts/ ${server_tenneco}:/usr/local/scripts/</code>
  - Copy the sudoers file from the NIM server pgnmsv01<code>sudo rsync -a /prod/images/etc/sudoers ${server_tenneco}:/etc/sudoers</code>
  - Copy the ssh_allowed_commands file from NIM server pgnmsv01<code>sudo rsync -a /etc/ssh_allowed_commands.sh ${server_tenneco}:/etc</code>
  - Add the system to UUMA<code>ssh taqa1a03 "echo ${server_tenneco} | sudo tee -a /home/oracle/uuma/hosts.txt"</code>

====== For SAP servers - additional steps are needed ======

  - Login to the server you are building<code>ssh daerap01h</code>
  - Modify /etc/hosts to match SAP recommendation<code>sudo vi /etc/hosts</code>Change from<code>10.0.48.19    daerap01h</code>To<code>10.0.48.19    daerap01h.amer.int.tenneco.com daerap01h</code>
  - Install uuid <code>sudo yum -y install uuidd</code>
  - Run the uuid script to validate the change<code>scp pgnmsv01:/prod/images/scripts/check-libuuid.sh /var/tmp/</code>run it<code>sudo /var/tmp/check-libuuid.sh</code>
  - Install sap local packages<code>sudo yum -y install compat-locales-sap compat-locales-sap-common</code>
  - Install VNC server<code>sudo yum -y install tigervnc-server</code>
  - Install xterm<code>sudo yum -y install xterm</code>
  - Install NFS utils<code>sudo yum -y install nfs-utils</code>
  - Enable & start rpcbind<code>sudo systemctl start rpcbind
sudo systemctl enable rpcbind</code>
  - Create SAP user accounts as requested by Basis Team.

  - Create unispool user<code>sudo groupadd -g 415 unispool
sudo mkdir -p /users/unispool
sudo useradd -g unispool -m -d /users/unispool -c "Unispool project ID" -u 315 unispool</code>
  - Grant unispool user crontab access<code>echo "unispool" | sudo tee -a /etc/cron.allow</code>
  - Create NA ERT development ( CTA ) user accounts<code># Add standard
sudo useradd -s /usr/bin/csh -g sapsys -G sapinst,dba -d /home/ctaadm -c "SAP NA System Admin" -m -u 5201 ctaadm
sudo useradd -s /usr/bin/csh -g dba -G sapinst,sapsys -d /home/orapta -c "SAP NA Oracle Admin" -m -u 3200 orapta
sudo useradd -s /usr/bin/csh -g dba -G sapinst,sapsys -d /home/oracta -c "SAP NA Oracle Admin" -m -u 1200 oracta
sudo useradd -s /usr/bin/csh -g dba -G sapinst,sapsys -d /home/sapadm -c "SAP Local Administrator" -m -u 205 sapadm
sudo useradd -s /usr/bin/csh -g dba -G sapinst,sapsys -d /home/daaadm -c "SAP System Administrator" -m -u 206 daaadm</code>


  - Set the ulimits for all users associated with R/3<code>sudo vi /etc/security/limits.conf</code> Add this config<code>
#for all  users
*       soft    stack   -1
*       hard    stack   -1
*       soft    core    2000
*       hard    core    8000
*       soft    memlock         -1
*       hard    memlock         -1
*       soft    nproc           -1
*       hard    nproc           -1
*       soft    nofile          65536
*       hard    nofile          65536

</code><code>sudo rm /etc/security/limits.d/20-nproc.conf</code>

    - Create the paging VG<code>sudo pvcreate /dev/sdc</code>Then<code>sudo vgcreate pagingvg /dev/sdc</code>then<code>sudo lvcreate pagingvg -n swapvol1 -L 64G</code>Format it<code>sudo mkswap /dev/pagingvg/swapvol1</code>Add entry to /etc/fstab<code>echo "/dev/pagingvg/swapvol1    swap    swap    defaults    0 0" | sudo tee -a /etc/fstab</code>Enable the paging space<code>sudo swapon -av</code>Check<code>sudo cat /proc/swaps</code>
  - Create /dev/shm of 75% (RAM + Swap)size.
    - Find out the memory<code>grep ^MemTotal /proc/meminfo</code>Find out swap space<code>sudo swapon -s</code>Figure out 75% and add to /etc/fstab<code>sudo vi /etc/fstab
none      /dev/shm        tmpfs   defaults,size=70G,nodev,nosuid,noexec        0 0</code>save and close the /etc/fstab file and mount the filesystem<code>sudo mount -o remount /dev/shm</code>
  
  - Create standard SAP application filesystems as requested by Basis members.

====== Create standard SAP filesystems ======

  - Look for data disk<code>sudo fdisk -l | grep ^Disk | grep /dev/sd</code>
  - Look for currently used pvs<code>sudo pvs</code>
  - Identitfy the correct disk to be used for data. In this case, it is /dev/sdb
  - Prepare disk for LVM<code>sudo pvcreate -f /dev/sdb</code>
  - Create datavg01<code>sudo vgcreate datavg01 /dev/sdb</code>
  - Create logical volumes<code>sudo lvcreate -n oracle -L 512MB datavg01
sudo lvcreate -n oracle_client -L 1024MB datavg01
sudo lvcreate -n oracle_CTA -L 1024MB datavg01
sudo lvcreate -n usr_sap -L 1024MB datavg01
sudo lvcreate -n usr_sap_CTA -L 8192MB datavg01
sudo lvcreate -n usr_sap_CTA_SUM -L 10240MB datavg01
sudo lvcreate -n usr_sap_DAA -L 3072MB datavg01
sudo lvcreate -n usr_sap_hostctrl -L 1024MB datavg01
sudo lvcreate -n home_ctaadm -L 512MB datavg01
sudo lvcreate -n home_daaadm -L 512MB datavg01
sudo lvcreate -n users_unispool -L 2048MB datavg01</code>
  - Create filesystems<code>sudo mkfs -t ext4 /dev/datavg01/oracle
sudo mkfs -t ext4 /dev/datavg01/oracle_client
sudo mkfs -t ext4 /dev/datavg01/oracle_CTA
sudo mkfs -t ext4 /dev/datavg01/usr_sap
sudo mkfs -t ext4 /dev/datavg01/usr_sap_CTA
sudo mkfs -t ext4 /dev/datavg01/usr_sap_CTA_SUM
sudo mkfs -t ext4 /dev/datavg01/usr_sap_DAA
sudo mkfs -t ext4 /dev/datavg01/usr_sap_hostctrl
sudo mkfs -t ext4 /dev/datavg01/home_ctaadm
sudo mkfs -t ext4 /dev/datavg01/home_daaadm
sudo mkfs -t ext4 /dev/datavg01/users_unispool</code>
  - Add to /etc/fstab<code>echo "/dev/mapper/datavg01-oracle   /oracle                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-oracle_client   /oracle/client                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-oracle_CTA   /oracle/CTA                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-usr_sap   /usr/sap                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-usr_sap_CTA   /usr/sap/CTA                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-usr_sap_CTA_SUM   /usr/sap/CTA/SUM                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-usr_sap_DAA   /usr/sap/DAA                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-usr_sap_hostctrl   /usr/sap/hostctrl                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-home_ctaadm   /home/ctaadm                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-home_daaadm   /home/daaadm                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
echo "/dev/mapper/datavg01-users_unispool   /users/unispool                    ext4    defaults        1 2" | sudo tee -a /etc/fstab</code>
  - Mount the filesystems<code>sudo mkdir -p /oracle
sudo mount /oracle
sudo mkdir -p /oracle/client
sudo mount /oracle/client
sudo mkdir -p /oracle/CTA
sudo mount /oracle/CTA
sudo mkdir -p /usr/sap
sudo mount /usr/sap
sudo mkdir -p /usr/sap/CTA
sudo mount /usr/sap/CTA
sudo mkdir -p /usr/sap/CTA/SUM
sudo mount /usr/sap/CTA/SUM
sudo mkdir -p /usr/sap/DAA
sudo mount /usr/sap/DAA
sudo mkdir -p /usr/sap/hostctrl
sudo mount /usr/sap/hostctrl
sudo mkdir -p /home/ctaadm
sudo mount /home/ctaadm
sudo mkdir -p /home/daaadm
sudo mount /home/daaadm
sudo mkdir -p /users/unispool
sudo mount /users/unispool
sudo mkdir -p /comm</code>
  - Change the ownership for filesystems as requested<code>sudo chown oracta:dba /oracle
sudo chown oracta:dba /oracle/client
sudo chown oracta:dba /oracle/CTA
sudo chown ctaadm:sapsys /usr/sap
sudo chown ctaadm:sapsys /usr/sap/CTA
sudo chown ctaadm:sapsys /usr/sap/CTA/SUM
sudo chown daaadm:sapsys /usr/sap/DAA
sudo chown root:sapsys /usr/sap/hostctrl
sudo chown ctaadm:sapsys /home/ctaadm
sudo chown daaadm:sapsys /home/daaadm
sudo chown unispool:unispool /users/unispool</code>
  - Create NFS mounts. Add these lines to /etc/fstab<code>sudo vi /etc/fstab</code>Add these to the end<code>xaerdb03:/sapmnt/CTA/exe /sapmnt/CTA/exe nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp
daerdb01:/sapmnt/CTA/profile /sapmnt/CTA/profile nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp
daerdb01:/sapmnt/CTA/global /sapmnt/CTA/global nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp
daerdb01:/usr/sap/trans /usr/sap/trans nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp
daap3p01:/taedi61 /taedi61 nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp
daerdb01:/sapcomm /sapcomm nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp
daerdb01:/sapcomm/CTA/archive /sapcomm/CTA/archive nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp
pgadap01:/sapmedia /sapmedia nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp
daap3p01:/comm /comm nfs    rsize=8192,wsize=8192,timeo=14,intr,soft,proto=tcp,mountproto=tcp</code>

  - Mount the NFS filesystems<code>sudo mkdir -p /sapmnt/CTA/exe
sudo mount /sapmnt/CTA/exe
sudo mkdir -p /sapmnt/CTA/profile
sudo mount /sapmnt/CTA/profile
sudo mkdir -p /sapmnt/CTA/global
sudo mount /sapmnt/CTA/global
sudo mkdir -p /usr/sap/trans
sudo mount /usr/sap/trans
sudo mkdir /taedi61
sudo mount /taedi61
sudo mkdir -p /sapcomm
sudo mount /sapcomm
sudo mkdir -p /sapcomm/CTA/archive
sudo mount /sapcomm/CTA/archive
sudo mkdir -p /sapmedia
sudo mount /sapmedia</code>


====== Configuring unispool to systemd/RHEL7 ======

** For informational purposes only **

  * Objective is to enable unispool to be controlled by systemd. systemd replaced init in RHEL6 or 7.
  * This is the correct way to implement a service in RHEL7 [[https://access.redhat.com/solutions/1163283]]


FIXME **This is not tested yet, working with Danny Smeets**
===== Adding unispool to systemd =====

  - Create a generic start/stop script for unispool<code>sudo vi /usr/local/sbin/unispool.sh</code>paste this output it<code>#!/bin/bash
#
# Custom script to startup unispool

function start_unispool {
/users/unispool/programs/unispool_start
export MAINPID=$(ps -ef | grep /users/unispool/bin/main | grep -v grep | awk '{print $2}')
}

function stop_unispool {
/users/unispool/programs/unispool_stop
}

case ${1} in
start)
   start_unispool
   ;;
stop)
   stop_unispool
   ;;
reload)
   stop_unispool
   start_unispool
   ;;
*)
   echo "Unknown "
   ;;
esac</code>
  - Make it executable<code>sudo chmod 755 /usr/local/sbin/unispool.sh</code>
  - Create a config file for systemd/unispool<code>sudo vi /etc/systemd/system/unispool.service</code>Add this content to it<code>[Unit]
Description=Unispool management script
After=network.target

[Service]
Type=oneshot
ExecStart=/usr/local/sbin/unispool.sh start
ExecStop=/usr/local/sbin/unispool.sh stop
ExecReload=/usr/local/sbin/unispool.sh reload
User=unispool
Group=unispool
RemainAfterExit=yes
TimeoutSec=30

[Install]
WantedBy=multi-user.target</code>
  - At this time, we should be able to,
    - Start unispool<code>sudo systemctl start unispool</code>
    - Stop  unispool<code>sudo systemctl stop unispool</code>
    - Status of unispool<code>sudo systemctl status unispool</code>
    - Restart of unispool<code>sudo systemctl reload unispool</code>
    - Enable for automatic start/stop<code>sudo systemctl enable unispool</code>

====== If the system needs unispool - installation ======

  - Create the unispool filesystem<code>sudo lvcreate -n users_unispool -L 2048MB datavg01
sudo mkfs -t ext4 /dev/datavg01/users_unispool
echo "/dev/mapper/datavg01-users_unispool   /users/unispool                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
sudo mkdir -p /users/unispool
sudo mount /users/unispool</code>
  - Download and untar the unispool binaries<code>cd /var/tmp
wget http://pablsv02/unispool/unispool.rhel.6.23.gz
cd /users/unispool
sudo gtar xzf /var/tmp/unispool.rhel.6.23.gz</code>
  - Cleanup<code>sudo rm /var/tmp/unispool.rhel.6.23.gz</code>

====== Install NBU client on Linux ======


  - Create /usr/openv filesystem<code>sudo lvcreate -n openv -L 4G datavg01
sudo mkfs -t ext4 /dev/datavg01/openv
echo "/dev/mapper/datavg01-openv   /usr/openv                    ext4    defaults        1 2" | sudo tee -a /etc/fstab
sudo mkdir -p /usr/openv
sudo mount /usr/openv</code>
  - Download answer file<code>cd /tmp
wget http://pablsv02/config/NBInstallAnswer.conf
echo "CLIENT_NAME=`uname -n`.amer.int.tenneco.com" >> NBInstallAnswer.conf</code>
  - Install NBU client<code>sudo yum -y install VRTSnbcfg VRTSnbclt VRTSnbjava VRTSnbjre VRTSnbpck VRTSpbx VRTSpddea</code>
  - Reboot<code>sudo init 6</code>

