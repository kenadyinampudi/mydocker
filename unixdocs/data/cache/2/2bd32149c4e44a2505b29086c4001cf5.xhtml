
<h1 class="sectionedit1" id="aix_vios_server_post_installation_work">AIX/VIOS Server Post installation work</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "AIX/VIOS Server Post installation work" [1-54] -->
<h2 class="sectionedit2" id="steps_from_the_nim_server_pcdcunxaxap01">Steps from the NIM Server (pcdcunxaxap01)</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Login to pcdcunxaxap01 and store the hostname<pre class="code">export targethost=&lt;host&gt;</pre>

<p>
&#039;host&#039; is the one being built.
</p>
</div>
</li>
<li class="level1"><div class="li"> For some of our favorite team members, we also copy the ssh keys for them.<pre class="code">for user in ganjab81 hansej58 inampk48 jhf1625 khanm044 kumarv25 lpar2rd meixnj63 pawetkac raghk rajhsubr secscan snowscan solwinds tauxrpt x1abansa x1cxs952 x1jhz999 x1kousra x1kxk630 x1naveka x1nithsa x1rzb826 x1sadhar x1shukla x1sumik1 x1vasuna
do
   sudo scp -p /home/${user}/.profile ${targethost}:/home/${user}/.profile
   sudo rsync -avv /home/${user}/.ssh/ ${targethost}:/home/${user}/.ssh/
done</pre>
</div>
</li>
<li class="level1"><div class="li"> Setup resolv.conf</div>
<ol>
<li class="level2"><div class="li"> North America<pre class="code">sudo scp /prod/images/etc/resolv.conf.na ${targethost}:/etc/resolv.conf</pre>
</div>
</li>
<li class="level2"><div class="li"> Europe<pre class="code">sudo scp /prod/images/etc/resolv.conf.eu ${targethost}:/etc/resolv.conf</pre>
</div>
</li>
<li class="level2"><div class="li"> Others - refer this document<a href="/doku.php?id=unix:setupresolv.conf" class="wikilink1" title="unix:setupresolv.conf"> Setup resolv.conf - Click here</a></div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Setup NTP</div>
<ol>
<li class="level2"><div class="li"> AIX<pre class="code">sudo scp /prod/images/etc/ntp.conf.aix ${targethost}:/etc/ntp.conf</pre>
</div>
</li>
<li class="level2"><div class="li"> VIOS<pre class="code">sudo scp /prod/images/etc/ntp.conf.vios ${targethost}:/home/padmin/config/ntp.conf</pre>
</div>
</li>
<li class="level2"><div class="li"> Refresh the daemons<pre class="code">sudo ssh ${targethost} &quot;chrctcp -S -a xntpd&quot;
sudo ssh ${targethost} &quot;ntpdate -u time.amer.int.tenneco.com&quot;</pre>

<p>
Check the date and time
</p>
<pre class="code">sudo ssh ${targethost} date</pre>
</div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Configure default ssh configs<pre class="code">sudo scp /prod/images/etc/global_ssh_config ${targethost}:/etc/ssh/ssh_config</pre>
</div>
</li>
<li class="level1"><div class="li"> Configure sysinter<pre class="code">sudo ssh ${targethost} &quot;mkdir -p /usr/local/bin&quot;
sudo scp /prod/images/applications/csi/sysinter.aix5 ${targethost}:/usr/local/bin/sysinter.aix5
sudo ssh ${targethost} grep -q ^sysinter /etc/services
[[ ${?} -ne 0 ]] &amp;&amp; sudo ssh ${targethost} &quot;echo &#039;sysinter                40035/tcp&#039; &gt;&gt; /etc/services &quot;
sudo ssh ${targethost} grep -q ^sysinter /etc/inetd.conf
[[ ${?} -ne 0 ]] &amp;&amp; sudo ssh ${targethost} &quot;echo &#039;sysinter        stream  tcp     nowait  root    /usr/local/bin/sysinter.aix5&#039; &gt;&gt; /etc/inetd.conf &quot;
sudo ssh ${targethost} &quot;refresh -s inetd&quot;</pre>
</div>
</li>
<li class="level1"><div class="li"> Copy the scripts<pre class="code">sudo ssh ${targethost} &quot;mkdir -p /usr/local/scripts&quot;
sudo rsync -a /usr/local/scripts/ ${targethost}:/usr/local/scripts/</pre>
</div>
</li>
<li class="level1"><div class="li"> Create a mksysb filesystem<pre class="code">sudo ssh ${targethost} &quot;crfs -vjfs2 -g rootvg -m /bkpmksb -A yes -t no -a size=20G&quot;
sudo ssh ${targethost} &quot;mount /bkpmksb&quot;</pre>
</div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:installothersoftwaresaix" class="wikilink1" title="unix:installothersoftwaresaix">On AIX and VIOS, install additional softwares</a></div>
</li>
<li class="level1"><div class="li"> Setup mksysb backup<pre class="code">sudo scp /prod/images/etc/id_dsa.mksysb ${targethost}:/usr/local/scripts/id_dsa.mksysb
sudo scp /prod/images/scripts/mksysb.sh ${targethost}:/usr/local/scripts/mksysb.sh</pre>
</div>
</li>
<li class="level1"><div class="li"> If AIX, Add the system to UUMA<pre class="code">sudo ssh pcdcunxlxap03 &quot;echo ${targethost} &gt;&gt; /home/oracle/uuma/hosts.txt&quot;</pre>
</div>
</li>
<li class="level1"><div class="li"> If AIX, configure snmpd<pre class="code">sudo scp /etc/snmpdv3.conf ${targethost}:/etc/snmpdv3.conf</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT2 SECTION "Steps from the NIM Server (pcdcunxaxap01)" [55-2997] -->
<h2 class="sectionedit3" id="steps_from_the_server_that_is_being_built">Steps from the server that is being built</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Login to the server and perform the rest of the steps</div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:aixnetworkmemparam" class="wikilink1" title="unix:aixnetworkmemparam">If AIX, Configure Network and Memory parameters</a></div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:aixsaninitconfig" class="wikilink1" title="unix:aixsaninitconfig">Perform initial SAN configuration on AIX and VIOS(vSCSI only) </a></div>
</li>
<li class="level1"><div class="li"> Cleanup cron jobs<pre class="code">for file in $(sudo ls -1 /var/spool/cron/crontabs | egrep -v &quot;^root$|^adm$|^sys$|^uucp$&quot;)
do
   sudo rm -i /var/spool/cron/crontabs/${file} # Remove the -i if you are confident
done</pre>
</div>
</li>
<li class="level1"><div class="li"> Enable cron if disabled<pre class="code">sudo mkitab cron:23456789:respawn:/usr/sbin/cron</pre>
</div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:syslogconfigtenneco#configuring_an_aix_host_to_send_errpt_entries_to_centralized_syslog_server" class="wikilink1" title="unix:syslogconfigtenneco">Enable Centralised syslog</a></div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:createinformationfile" class="wikilink1" title="unix:createinformationfile">Create information file</a></div>
</li>
<li class="level1"><div class="li"> Add the TMOUT variable to /etc/profile if it wasn&#039;t a clone<pre class="code">sudo vi /etc/profile</pre>
<pre class="code"># Automatic logout, include in export line if uncommented
TMOUT=3600
readonly TMOUT
PS1=&quot;$LOGNAME on &quot;$(uname -n)&quot;:&quot;&#039;$PWD $ &#039;</pre>
</div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:usersandgroups" class="wikilink1" title="unix:usersandgroups">Create basic unix group and users</a></div>
</li>
<li class="level1"><div class="li"> Schedule standard cron jobs<pre class="code">sudo crontab -e</pre>

<p>
Add these
</p>
<pre class="code"># Customized for DRiV
59 21 * * 4 /usr/local/scripts/cr_altdisk.sh 1&gt;/dev/null 2&gt;&amp;1
00 23 * * * /usr/local/scripts/mksysb.sh 1&gt;/dev/null 2&gt;&amp;1
03 03 * * 6 /usr/local/scripts/clean_var 1&gt;/dev/null 2&gt;&amp;1
30 23 * * 6 /usr/local/scripts/rpt_config.sh 1&gt;/dev/null 2&gt;&amp;1
05 * * * * /usr/local/scripts/stales.sh 1&gt;/dev/null 2&gt;&amp;1</pre>
</div>
</li>
<li class="level1"><div class="li"> If booting from SAN, Create an alt_disk_copy.<pre class="code">sudo alt_disk_copy -B -d hdiskX</pre>
</div>
</li>
<li class="level1"><div class="li"> If VIO install updates</div>
<ol>
<li class="level2"><div class="li"> <a href="/doku.php?id=unix:vioupdatesinstall" class="wikilink1" title="unix:vioupdatesinstall">Install updates on VIO servers.</a></div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Remove the xmdaily entry from /etc/inittab.</div>
<ol>
<li class="level2"><div class="li"> <pre class="code">sudo rmitab &quot;xmdaily&quot;</pre>
</div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> If booting from internal disks, Mirror rootvg</div>
<ol>
<li class="level2"><div class="li"> AIX<pre class="code">extendvg rootvg hdiskX
sudo mirrorvg -c2 rootvg
sudo bosboot -ad /dev/hdiskX
sudo bootlist -m normal hdiskX hdiskY</pre>
</div>
</li>
<li class="level2"><div class="li"> VIOS</div>
<ol>
<li class="level3"><div class="li"> Login as padmin Mirror boot disk<pre class="code">extendvg -f rootvg hdiskX
mirrorios -f hdiskX</pre>

<p>
<strong>Check the bootlist</strong>
</p>
</div>
<ol>
<li class="level4"><div class="li"> <pre class="code">oem_setup_env</pre>
<pre class="code">bootlist -m normal hdiskX hdiskY</pre>
</div>
</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li class="level1"><div class="li"> If VIOS, Check the root file system ”/”. If it is 300M, extend it by 1324M<pre class="code">df -gt /
sudo chfs -a size=+1324M / </pre>
</div>
</li>
<li class="level1"><div class="li"> If AIX,Send ticket for netbackup <strong> MAKE SURE YOU HAVE COPIED THE /usr/openv FILE SYSTEM TO THE NEW SERVER IF THIS IS A MIGRATION </strong></div>
</li>
<li class="level1"><div class="li"> Send ticket for Monitoring</div>
</li>
<li class="level1"><div class="li"> If AIX, Send a ticket to “GIOS Operations - Entitlement” to add the systems.</div>
</li>
<li class="level1"><div class="li"> Do a final reboot<pre class="code">sudo shutdown -Fr</pre>
</div>
</li>
<li class="level1"><div class="li"> Login to the NIM server and perform a NIM client cleanup<pre class="code">sudo nim -F -o reset &lt;hostname&gt;
sudo nim -o deallocate -a subclass=all &lt;hostname&gt;</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT3 SECTION "Steps from the server that is being built" [2998-] -->