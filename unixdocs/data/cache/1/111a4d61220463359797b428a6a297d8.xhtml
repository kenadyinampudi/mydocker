
<h1 class="sectionedit1" id="get_disk_details_of_a_vm_using_powercli">Get Disk Details of a VM using PowerCLI</h1>
<div class="level1">

<p>
The following function can be used to get <abbr title="Small Computer System Interface">SCSI</abbr> ID, Size &amp; VMDK Store Name and path using PowerCLI. 
</p>
<ul>
<li class="level1"><div class="li"> If you have not already installed PowerCLI on your windows computer, <a href="/doku.php?id=unix:install_powercli_desktop" class="wikilink1" title="unix:install_powercli_desktop">Install it first</a></div>
</li>
<li class="level1"><div class="li"> Invoke PowerCLI &amp; login to the Vcenter <pre class="code">Connect-VIServer -server cdcvilms156.driv.com</pre>
</div>
</li>
<li class="level1"><div class="li"> Copy &amp; Paste the code snippet to temporarily create the function VMDiskAndRDM<pre class="code">&lt;# .Description
    Function to get a VM&#039;s hard disk and RDM info
    Originally from Sep 2011, updated Dec 2013 -- vNugglets.com
    .Example
    Get-VMDiskAndRDM -vmName someVM -ShowVMDKDatastorePath | ft -a
    VMName HardDiskName ScsiId DeviceDisplayName SizeGB ScsiCanonicalName                    VMDKDStorePath
    ------ ------------ ------ ----------------- ------ -----------------                    --------------
    someVM Hard disk 1  0:0                          50                                      [dstore0] someVM/someVM.vmdk
    someVM Hard disk 2  1:0    someVM-/log_dir       20 naa.60000945618415615641111111111111 [dstore0] someVM/someVM_1.vmdk
    Get the disks (including RDMs) for &quot;someVM&quot;, and include the datastore path for each VMDK
#&gt;
function Get-VMDiskAndRDM {
    param(
        ## name pattern of the VM guest for which to get info
        [parameter(Mandatory=$true)][string]$vmName_str = &quot;myVM&quot;,
        ## switch to specify that VMDK&#039;s datastore path should also be returned
        [switch]$ShowVMDKDatastorePath_sw
    )
 
    ## the cool, FaF way (using .NET View objects)
    ## get the VM object(s)
    $arrVMViewsForStorageInfo = Get-View -Viewtype VirtualMachine -Property Name, Config.Hardware.Device, Runtime.Host -Filter @{&quot;Name&quot; = &quot;$vmName_str&quot;}
    if (($arrVMViewsForStorageInfo | Measure-Object).Count -eq 0) {Write-Warning &quot;No VirtualMachine objects found matching name pattern &#039;$vmName_str&#039;&quot;; exit} ## end if
 
    $arrVMViewsForStorageInfo | %{
        $viewVMForStorageInfo = $_
        ## get the view of the host on which the VM currently resides
        $viewHostWithStorage = Get-View -Id $viewVMForStorageInfo.Runtime.Host -Property Config.StorageDevice.ScsiLun
 
        $viewVMForStorageInfo.Config.Hardware.Device | ?{$_ -is [VMware.Vim.VirtualDisk]} | %{
            $hdThisDisk = $_
            $oScsiLun = $viewHostWithStorage.Config.StorageDevice.ScsiLun | ?{$_.UUID -eq $hdThisDisk.Backing.LunUuid}
            ## the properties to return in new object
            $hshThisVMProperties = @{
                VMName = $viewVMForStorageInfo.Name
                ## the disk&#039;s &quot;name&quot;, like &quot;Hard disk 1&quot;
                HardDiskName = $hdThisDisk.DeviceInfo.Label
                ## get device&#039;s SCSI controller and Unit numbers (1:0, 1:3, etc)
                ScsiId = &amp;{$strControllerKey = $_.ControllerKey.ToString(); &quot;{0}`:{1}&quot; -f $strControllerKey[$strControllerKey.Length - 1], $_.Unitnumber}
                DeviceDisplayName = $oScsiLun.DisplayName
                SizeGB = [Math]::Round($_.CapacityInKB / 1MB, 0)
                ScsiCanonicalName = $oScsiLun.CanonicalName
            } ## end hsh
            ## the array of items to select for output
            $arrPropertiesToSelect = &quot;VMName,HardDiskName,ScsiId,DeviceDisplayName,SizeGB,ScsiCanonicalName&quot;.Split(&quot;,&quot;)
            ## add property for VMDKDStorePath if desired
            if ($ShowVMDKDatastorePath_sw -eq $true) {$hshThisVMProperties[&quot;VMDKDStorePath&quot;] = $hdThisDisk.Backing.Filename; $arrPropertiesToSelect += &quot;VMDKDStorePath&quot;}
            New-Object -Type PSObject -Property $hshThisVMProperties | Select $arrPropertiesToSelect
        } ## end foreach-object
    } ## end foreach-object
} ## end function</pre>
</div>
</li>
<li class="level1"><div class="li"> Run the function; replace the vmname with the name of the VM for which you wish to get the details <pre class="code">Get-VMDiskAndRDM -vmName SFLDMILX276 -ShowVMDKDatastorePath | ft -a</pre>

<p>
 This can be particularly helpful when you are cloning a VM and want to compare the source &amp; the target and make sure that all the disks has been allocated correctly.  Sample output below. 
</p>
<pre class="code">PS C:\WINDOWS\system32&gt; Get-VMDiskAndRDM -vmName scdces1lxdb01 -ShowVMDKDatastorePath | ft -a

VMName        HardDiskName ScsiId DeviceDisplayName SizeGB ScsiCanonicalName VMDKDStorePath                                            
------        ------------ ------ ----------------- ------ ----------------- --------------                                            
SCDCES1LXDB01 Hard disk 1  0:0                          50                   [CDC-PURE-ES1-AUG1-NL-001] SFLDMILX276/SFLDMILX276_11.vmdk
SCDCES1LXDB01 Hard disk 2  0:1                          50                   [CDC-PURE-ES1-AUG1-NL-001] SFLDMILX276/SFLDMILX276_21.vmdk
SCDCES1LXDB01 Hard disk 3  0:2                         200                   [CDC-PURE-ES1-AUG1-NL-001] SFLDMILX276/SFLDMILX276_31.vmdk
SCDCES1LXDB01 Hard disk 4  1:1                          40                   [CDC-PURE-ES1-AUG1-NL-001] SFLDMILX276/SFLDMILX276_3.vmdk 
SCDCES1LXDB01 Hard disk 5  2:1                        1638                   [CDC-PURE-ES1-AUG1-NL-007] SFLDMILX276/SFLDMILX276_33.vmdk
SCDCES1LXDB01 Hard disk 6  2:2                        1638                   [CDC-PURE-ES1-AUG1-NL-008] SFLDMILX276/SFLDMILX276_9.vmdk 
SCDCES1LXDB01 Hard disk 7  2:3                        1638                   [CDC-PURE-ES1-AUG1-NL-009] SFLDMILX276/SFLDMILX276_41.vmdk
SCDCES1LXDB01 Hard disk 8  2:4                        1638                   [CDC-PURE-ES1-AUG1-NL-010] SFLDMILX276/SFLDMILX276_43.vmdk
SCDCES1LXDB01 Hard disk 9  2:5                        1638                   [CDC-PURE-ES1-AUG1-NL-011] SFLDMILX276/SFLDMILX276_45.vmdk
SCDCES1LXDB01 Hard disk 10 3:1                        1024                   [CDC-PURE-ES1-AUG1-NL-002] SFLDMILX276/SFLDMILX276_49.vmdk
SCDCES1LXDB01 Hard disk 11 3:2                         900                   [CDC-PURE-ES1-AUG1-NL-003] SFLDMILX276/SFLDMILX276_46.vmdk
SCDCES1LXDB01 Hard disk 12 3:3                         500                   [CDC-PURE-ES1-AUG1-NL-005] SFLDMILX276/SFLDMILX276_39.vmdk
SCDCES1LXDB01 Hard disk 13 3:4                        1229                   [CDC-PURE-ES1-AUG1-NL-005] SFLDMILX276/SFLDMILX276_47.vmdk
SCDCES1LXDB01 Hard disk 18 0:3                         220                   [CDC-PURE-ES1-AUG1-NL-001] SFLDMILX276/SFLDMILX276_5.vmdk 
SCDCES1LXDB01 Hard disk 17 1:2                         770                   [CDC-PURE-ES1-AUG1-NL-001] SFLDMILX276/SFLDMILX276_4.vmdk 
SCDCES1LXDB01 Hard disk 14 1:3                         350                   [CDC-PURE-ES1-AUG1-NL-004] SFLDMILX276/SFLDMILX276_1.vmdk 
SCDCES1LXDB01 Hard disk 15 1:4                          80                   [CDC-PURE-ES1-AUG1-NL-001] SFLDMILX276/SFLDMILX276_2.vmdk 
SCDCES1LXDB01 Hard disk 19 3:0                         870                   [CDC-PURE-ES1-AUG1-NL-005] SFLDMILX276/SFLDMILX276_6.vmdk 
SCDCES1LXDB01 Hard disk 16 3:5                        1638                   [CDC-PURE-ES1-AUG1-NL-006] SFLDMILX276/SFLDMILX276.vmdk   
SCDCES1LXDB01 Hard disk 20 3:6                         650                   [CDC-PURE-ES1-AUG1-NL-008] SFLDMILX276/SFLDMILX276_7.vmdk 
SCDCES1LXDB01 Hard disk 21 3:8                         850                   [CDC-PURE-ES1-AUG1-NL-007] SFLDMILX276/SFLDMILX276_8.vmdk 
SCDCES1LXDB01 Hard disk 22 3:9                         620                   [CDC-PURE-ES1-AUG1-NL-007] SFLDMILX276/SFLDMILX276_10.vmdk

PS C:\WINDOWS\system32&gt;</pre>
</div>
</li>
</ul>

</div>
