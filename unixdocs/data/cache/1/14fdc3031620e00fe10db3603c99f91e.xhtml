
<h1 class="sectionedit1" id="start_lpars_at_cdc_ptt_-_rhel">Start LPARs at CDC/PTT - RHEL</h1>
<div class="level1">
<ol>
<li class="level1"><div class="li"> Adjust and make sure time is correct<pre class="code">sudo ntpdate -u pgntpap01</pre>
</div>
</li>
<li class="level1"><div class="li"> After all systems are up, make sure NFS filesystems are mounted.</div>
</li>
<li class="level1"><div class="li"> Remove NBU software<pre class="code">sudo rpm -e VRTSnbcfg VRTSnetbp VRTSnbjava VRTSnbjre VRTSnbclt VRTSpbx VRTSnbpck</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT1 SECTION "Start LPARs at CDC/PTT - RHEL" [1-311] -->
<h1 class="sectionedit2" id="start_lpars_at_cdc_ptt_-_aix">Start LPARs at CDC/PTT - AIX</h1>
<div class="level1">

<p>
<strong> CDC PTT HMC is tgprhmc7.pt.int.tenneco.com </strong>
</p>

</div>
<!-- EDIT2 SECTION "Start LPARs at CDC/PTT - AIX" [312-405] -->
<h2 class="sectionedit3" id="switch_console_database_from_ldc_to_cdc">Switch console database from LDC to CDC</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Login to the NIM server <code>pgnmsv01</code></div>
</li>
<li class="level1"><div class="li"> Update console database <strong>This will be executed by one person</strong></div>
<ol>
<li class="level2"><div class="li"> Make a backup<pre class="code">sudo cp /prod/images/etc/unix_sys_console /prod/images/etc/unix_sys_console.$(date +%m%d%Y)</pre>
</div>
</li>
<li class="level2"><div class="li"> The manual way<pre class="code">sudo vi /prod/images/etc/unix_sys_console</pre>
</div>
</li>
<li class="level2"><div class="li"> Or try with this one</div>
<ol>
<li class="level3"><div class="li"> Define this function<pre class="code">function fix_unixconsole {
export hmc=$1
export lpar=$2
export consoledb=/prod/images/etc/unix_sys_console

echo &quot;Commenting out the existing entry for ${lpar} from console database&quot; 

grep -q ^${lpar} ${consoledb}
if [ ${?} -ne 0 ]
then
   echo &quot;${lpar} does not exist in console DB &quot;
   return
fi

sudo ex -sc &quot;/${lpar}/s/^/\#/|x&quot; ${consoledb}

echo &quot;Creating console definitions for ${hmc} - ${lpar} &quot; 

for frame in $(ssh ${hmc} lssyscfg -r sys -F name )
do
   ssh ${hmc} lssyscfg -r lpar -m ${frame} -F name,lpar_id | grep ^${lpar} &gt; /dev/null 2&gt;&amp;1
   if [ ${?} -eq 0 ]
   then
      lpar_id=$(ssh ${hmc} lssyscfg -r lpar -m ${frame} --filter lpar_names=${lpar} -F lpar_id )
      echo ${lpar}:lpar-ibm:${hmc}:${frame}:${lpar}:${lpar_id}:tauxrpt | sudo tee -a ${consoledb}
   fi
done
echo &quot;&quot;
echo &quot;Check the entries and make sure they are how they are supposed to be for ${lpar} &quot;
grep ${lpar} ${consoledb}
}</pre>
</div>
</li>
<li class="level3"><div class="li"> Produce the console database entries<pre class="code">for host in &lt;list or servers seperated by space&gt;
do
   fix_unixconsole tgprhmc7.pt.int.tenneco.com ${host}
done</pre>
</div>
</li>
</ol>
</li>
</ol>
</li>
</ol>

</div>
<!-- EDIT3 SECTION "Switch console database from LDC to CDC" [406-1917] -->
<h2 class="sectionedit4" id="boot_lpars_at_cdc_ptt">Boot lpars at CDC/PTT</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Store variables that points to your systems<pre class="code">export hostname=name_of_the_system</pre>
</div>
</li>
<li class="level1"><div class="li"> Find our the frame and store than in a variable<pre class="code">export frame=$(grep -i ^${hostname} /prod/images/etc/unix_sys_console | awk -F: &#039;{print $4}&#039; )</pre>
</div>
</li>
<li class="level1"><div class="li"> Power on the lpar<pre class="code">ssh tgprhmc7.pt.int.tenneco.com &quot;chsysstate -r lpar -o on -b sms -m ${frame} -n ${hostname}&quot;</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT4 SECTION "Boot lpars at CDC/PTT" [1918-2334] -->
<h2 class="sectionedit5" id="perform_post_migration_tasks_at_cdc_ptt">Perform post migration tasks at CDC/PTT</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Open a console session to your host<pre class="code">sudo getconsole ${hostname}</pre>
</div>
</li>
<li class="level1"><div class="li"> Check and see if you have booted from the right disk<pre class="code">if [ $(lsvg | grep -wc old_rootvg) -eq 1 ]
then
   bootdisk=$(lspv | grep -w old_rootvg | awk &#039;{print $1}&#039;)
   sudo bootlist -m normal ${bootdisk}
   echo &quot;Reboot the server now to boot from the correct root disk&quot;
else
   echo &quot;We have booted from the right disk.  Proceed with the NIC configuration&quot;
fi</pre>
</div>
</li>
<li class="level1"><div class="li"> Re-configure NICs at PTT &amp; assign the IP addres.(Validate it with the backup files in your home directory taken prior the migration)</div>
<ol>
<li class="level2"><div class="li"> Remove all IP configs if any from kernel<pre class="code">ifconfig $(ifconfig -a | grep : | grep -v lo0 |grep RUNNING | awk &#039;{print $1}&#039; | sed &quot;s;:;;g&quot;) down detach</pre>
</div>
</li>
<li class="level2"><div class="li"> Remove all device files for NICs<pre class="code">for dev in $(lsdev -Ccif | grep ^en | awk &#039;{print $1}&#039; | sed &quot;s;en;;g&quot;)
do
   rmdev -dl en${dev}
   rmdev -dl et${dev}
   rmdev -dl ent${dev}
   echo &quot;${dev} removed&quot;
done</pre>
</div>
</li>
<li class="level2"><div class="li"> Re-discover the NICs<pre class="code">sudo cfgmgr</pre>
</div>
</li>
<li class="level2"><div class="li"> Configure IP Addresses<pre class="code">cat /root/configure_ips.cmds</pre>

<p>
Check the output and execute the commands.
</p>
</div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> On clustered CI systems, varyon and mount filesystems and nfs, virtual IPs etc. <pre class="code">paerap99
paerap98

peerap99
peerap98</pre>
</div>
</li>
<li class="level1"><div class="li"> NTP update<pre class="code">sudo ntpdate -u pgntpap01</pre>
</div>
</li>
<li class="level1"><div class="li"> Enable NFS and reboot servers at PTT</div>
<ol>
<li class="level2"><div class="li"> Enable NFS mounts<pre class="code">nfsfilesystems=$(grep -p nfs /etc/filesystems | grep : | sed &quot;s;:;;g&quot; | tr &quot;\n&quot; &quot; &quot; )

for nfsfs in ${nfsfilesystems}
do
   sudo /usr/local/scripts/manage_auto_mount_nfs enable ${nfsfs}
done</pre>
</div>
</li>
<li class="level2"><div class="li"> Enable NFS exports<pre class="code">if [ -f /etc/exports.move2cdc ]
then
   sudo mv /etc/exports.move2cdc /etc/exports
   sudo exportfs -ua
   sudo exportfs -a
fi</pre>
</div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Cleanup the MPIO<pre class="code">lsdev -Cc disk | grep -i defined | awk &#039;{print $1}&#039; | awk &#039;{print $1}&#039; | xargs -n1 sudo rmdev -dl</pre>
</div>
</li>
<li class="level1"><div class="li"> Install Actifio client</div>
<ol>
<li class="level2"><div class="li"> Expand some filesystems<pre class="code">sudo chfs -a size=+1G /usr
sudo chfs -a size=+1G /opt</pre>
</div>
</li>
<li class="level2"><div class="li"> Install the package<pre class="code">sudo installp -acX -d /tmp/connector-AIX-latestversion.bff udsagent.rte</pre>
</div>
</li>
<li class="level2"><div class="li"> Remove the installation file<pre class="code">sudo rm /tmp/connector-AIX-latestversion.bff</pre>
</div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Set bootlist<pre class="code">lspv | grep -w rootvg | awk &#039;{print $1}&#039; | xargs -n1 sudo bootlist -m normal </pre>
</div>
</li>
<li class="level1"><div class="li"> Update the Pure ODM driver to the latest version. </div>
<ol>
<li class="level2"><div class="li"> Check oslevel<pre class="code">oslevel</pre>
</div>
<ol>
<li class="level3"><div class="li"> If oslevel is greater than 5.3, then follow the steps</div>
<ol>
<li class="level4"><div class="li"> Install Pure ODM<pre class="code">sudo mkdir -p /mnt/updates ; sudo mount pgnmsv01:/prod/images/storage /mnt/updates
sudo installp -u devices.fcp.disk.pure.flasharray.mpio.rte
sudo installp -acxd /mnt/updates/PureODM/1.0.0.7/devices.fcp.disk.pure.flasharray.mpio.rte all
lsdev -Ccdisk | grep &quot;PURE MPIO Drive&quot; | awk &#039;{print $1}&#039; | xargs -n1 sudo chdev -a hcheck_interval=30 -Pl</pre>

<p>
Make sure device driver has been installed
</p>
<pre class="code">lslpp -l &#039;*pure*&#039;</pre>

<p>
The output should be
</p>
<pre class="code">  Fileset                      Level  State      Description
  ----------------------------------------------------------------------------
Path: /usr/lib/objrepos
  devices.fcp.disk.pure.flasharray.mpio.rte
                             1.0.0.7  COMMITTED  AIX MPIO Support for PURE
                                                 Flash Arrays(New Install)</pre>
</div>
</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Reboot the server<pre class="code">sudo shutdown -Fr</pre>
</div>
</li>
<li class="level1"><div class="li"> Please reconfigure the IP alias, if any.<pre class="code">sudo grep alias /root/configure_ips.cmds</pre>
</div>
</li>
<li class="level1"><div class="li"> Validate all filesystems are mounted. This code should not produce any output<pre class="code">lsvg | grep -v altinst_rootvg | xargs -n1 lsvg -l | grep -i closed</pre>

<p>
Ignore boot volume.
</p>
</div>
</li>
<li class="level1"><div class="li"> <a href="https://tenneco.service-now.com/cmdb_ci_server_list.do?sysparm_userpref_module=8233ee770a0a0a64018f2cc165cdf2ed&amp;sysparm_clear_stack=true" class="urlextern" title="https://tenneco.service-now.com/cmdb_ci_server_list.do?sysparm_userpref_module=8233ee770a0a0a64018f2cc165cdf2ed&amp;sysparm_clear_stack=true"  rel="nofollow">In Service now locate the CI and change the location from Lincolnshire IL /US to Cyxtera DFT Data Center</a> </div>
</li>
<li class="level1"><div class="li"> Send an email to <code>AR_Tenneco@accenture.com</code><pre class="code">These server(s) have been migrated from Lincolnshire Datacenter to CDC-TEN(tenneco) datacenter, please update in Accelerate</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT5 SECTION "Perform post migration tasks at CDC/PTT" [2335-] -->