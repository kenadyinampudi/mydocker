
<h1 class="sectionedit1" id="upgrading_vios_servers_to_vios_22632">Upgrading VIOS Servers to VIOS 2.2.6.32</h1>
<div class="level1">

<p>
<strong> Note these are the instructions are based on documented steps that were used to upgrade Grass Lake, Monroe, taprvio110, taprvio111, taprvio120 and taprvio121 VIOS servers. </strong>
<strong> They were developed at Tenneco with the on site assitnace of Dave Buffaline, Senior Managing Consultant Virtualization, Performance, &amp; Technology Integration IBM as best practice VIOS upgrade proceedures, and are based on the replacement theory of upgrade. That is the VIOS is replaced with a complete server image instead of being upgrades with individual patch levels.</strong>
<strong> The taprvio120 and taprvio121 Upgrades were done during a UNIX Team meeting with all menbers present, and participating. </strong>
</p>

<p>
<strong> This is specifically designed for “new” VIOS installations and the upgrade of vacated hadrware VIOS servers that contain no functioning VIOS client lpars. </strong>
</p>

<p>
<strong> PRE UPGRADE PROCESS STARTS HERE </strong>
</p>
<ol>
<li class="level1"><div class="li"> Log in to the VIOS as the user padmin.  </div>
</li>
<li class="level1"><div class="li"> Commit previous updates, by running the updateios command. <pre class="code">updateios -commit </pre>
</div>
</li>
<li class="level1"><div class="li"> Verify no maps are in place. <pre class="code"> lsmap -all </pre>
</div>
</li>
<li class="level1"><div class="li"> Exit thte restricted shell <pre class="code"> oem-setup_env&gt; </pre>
<pre class="code"> set -o vi </pre>
</div>
</li>
<li class="level1"><div class="li"> Change to the /usrlocal/sbin directory  <pre class="code"> oem_setup_env </pre>
<pre class="code"> set -o vi </pre>
<pre class="code"> cd /usr/local/sbin </pre>
</div>
</li>
<li class="level1"><div class="li"> Run the checkit script to check VIOS recomended Adapter settings. <pre class="code"> ./checkit </pre>

<p>
 The last line of the output should be similiar to the following.  
</p>
<pre class="code"> taprvio110 - CHECKIT completed without issue on Mon Dec 10 11:07:36 CST 2018 </pre>

<p>
 If there are any recomendatains run the setit script to correct the settings 
</p>
<pre class="code"> ./setit </pre>

<p>
 Reexecute the checkit script to comdirm that all settings have been updated. 
</p>
</div>
</li>
<li class="level1"><div class="li"> Execute the following script to get the boot disk information. Make a note/save it, you will need later in the installation process. <pre class="code"> ./get-bootdisk.sh </pre>

<p>
 The output will look simiiar to this 
</p>
<pre class="code">uname -a
***************************************
AIX taprvio15 1 6 0002C6FAD400

BOOT Disk
***************************************
hdisk1
hdisk1          0002c6fa2fdebd4f                    rootvg          active
U78A5.001.WIH27C3-P1-C7-L1-T2-W500601653EE01288-L0 </pre>

<p>
 This is also captured in the snap output below. it i easier to have it readly availale instead of looking it up.
</p>
</div>
</li>
<li class="level1"><div class="li"> Run the pre_upgrade_snapit.sh command.  This creates a “snap” of the VIOS server. <pre class="code"> pre_upgrade_snapit.sh </pre>

<p>
 The output will be in tHe /usr/local/logs directory and will be in the format Pre_upgrade-{host name}-snapit.   
</p>
</div>
</li>
<li class="level1"><div class="li"> Create a backup of the VIOS infrastructure. This will be used to restore the network etc. after the upgrade. <pre class="code"> pre_upgrade_viosbr.sh </pre>

<p>
 The output will be in the /home/padmin/cfgbackups directory and will be in the format Pre_upgrade-{host name}-viosbr.tar.gz
</p>
</div>
</li>
<li class="level1"><div class="li"> Verify the viosbr <pre class="code"> viosbr -restore -file /home/padmin/cfgbackups/Pre_upgrade-{host name}-viosbr.tar.gz </pre>
</div>
</li>
<li class="level1"><div class="li"> Follow the standard AIX preupgrade steps.</div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=chris:backupconfig" class="wikilink1" title="chris:backupconfig">Perform the configuration backup</a></div>
</li>
<li class="level1"><div class="li"> copy the  snap and viodbr files to the repository. You will need to copy the viosbr output back to the system being upgraded after the upgrade has completed. Adjust toe folloing command accordingly. <pre class="code"> sudo scp ${host2patch}:/usr/local/logs/Pre_upgrade-${host2patch}-snapit /preupgrade/reports/Pre_upgrade-${host2patch}-snapit </pre>
<pre class="code"> sudo scp ${host2patch}:/home/padmin/Pre_upgrade-${host2patch}-viosbr.tar.gz /preupgrade/reports/Pre_upgrade-${host2patch}-viosbr.tar.gz </pre>
</div>
</li>
</ol>

<p>
<strong> UPGRADE PROCESS STARTS HERE </strong>
</p>
<ol>
<li class="level1"><div class="li"> </div>
</li>
<li class="level1"><div class="li"> Check and clear any errors in the error report <pre class="code"> errpt </pre>

<p>
 If there are errors then clean them 
</p>
<pre class="code"> errclear 00 </pre>
</div>
</li>
<li class="level1"><div class="li"> Note the adapter that has the server ip address assigned to it. <pre class="code"> ifconfig -a </pre>

<p>
 Output should resemble the following 
</p>
<pre class="code">taprvio110[/home/padmin] &gt;# ifconfig -a
en4: flags=1e084863,15c0&lt;UP,BROADCAST,NOTRAILERS,RUNNING,SIMPLEX,MULTICAST,GROUP                                                                 RT,64BIT,CHECKSUM_OFFLOAD(ACTIVE),LARGESEND,CHAIN&gt;
        inet 10.0.4.210 netmask 0xfffffc00 broadcast 10.0.7.255
         tcp_sendspace 262144 tcp_recvspace 262144 rfc1323 1
lo0: flags=e08084b,1c0&lt;UP,BROADCAST,LOOPBACK,RUNNING,SIMPLEX,MULTICAST,GROUPRT,6                                                                 4BIT,LARGESEND,CHAIN&gt;
        inet 127.0.0.1 netmask 0xff000000 broadcast 127.255.255.255
        inet6 ::1%1/0
         tcp_sendspace 131072 tcp_recvspace 131072 rfc1323 1</pre>
</div>
</li>
<li class="level1"><div class="li"> Check SEA adapter and put it into backup mode <pre class="code"> ./chksea |grep SEA | awk -F: &#039;{print $2}&#039;</pre>
<pre class="code"> chdev -l {output from previous comand} -a ha_mode=standby </pre>
</div>
</li>
<li class="level1"><div class="li"> Verifty the SEA is in standby mode <pre class="code"> lsattr -El {SEA from previous command} | grep ha_mode </pre>

<p>
 Output should be similiar to the following 
</p>
<pre class="code"> ha_mode       standby     High Availability Mode</pre>
</div>
</li>
<li class="level1"><div class="li"> Shutdown the VIOS server <pre class="code"> shutdown </pre>
</div>
</li>
</ol>

</div>
<!-- EDIT1 SECTION "Upgrading VIOS Servers to VIOS 2.2.6.32" [1-5067] -->
<h2 class="sectionedit2" id="configure_nim">Configure NIM</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Update the console database. Login to pgnmsv01<pre class="code">sudo vi /prod/images/etc/unix_sys_console</pre>

<p>
Make an entry similar to this
</p>
<pre class="code">taprvio3:blade-ibm:tgprbld1:1:root</pre>
</div>
</li>
<li class="level1"><div class="li"> Login to the respective NIM server and if this is a NEW VIOS server define the VIO server as a NIM client<pre class="code">sudo nim -o define -t standalone -a \
platform=chrp -a if1=&quot;find_net &lt;vioservername&gt; 0&quot; -a netboot_kernel=mp &lt;viosservername&gt;</pre>
</div>
</li>
<li class="level1"><div class="li"> Prepare the NIM client(VIO server) for a NIM bosinst operation<pre class="code">sudo nim -o bos_inst -a source=mksysb -a spot=vios_2_2_6_32_spot -a \
bosinst_data=vios-2-2-6-32-bosinst_data -a accept_licenses=yes -a \
no_client_boot=yes -a mksysb=vio-2-2-6-32-gold &lt;vioservername&gt;</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT2 SECTION "Configure NIM" [5068-5804] -->
<h2 class="sectionedit3" id="install_vios_using_nim">Install VIOS using NIM</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Login to pgnmsv01 and open a console session to the VIO server<pre class="code">sudo getconsole &lt;vioservername&gt;</pre>
</div>
</li>
<li class="level1"><div class="li"> From the HMC Power on the VIOS partition set to stop at SMS. </div>
</li>
<li class="level1"><div class="li"> At the console, set up the server fro network boot installation. Continue with the boot process. </div>
</li>
<li class="level1"><div class="li"> At the installation prompt select the option to select the boot disk. do not rely on the automatically chosen hdisk0 that is displayed. View the disks and select the disk that has the matching information that you saved from the get-bootdisk.sh  command in step 7 above. </div>
</li>
<li class="level1"><div class="li"> Once you have selected the correct disk continue with the installation. </div>
</li>
<li class="level1"><div class="li"> After the installation the server will reboot. login as padmn and run the followning command <pre class="code"> license -accept </pre>
</div>
</li>
</ol>

</div>
<!-- EDIT3 SECTION "Install VIOS using NIM" [5805-6603] -->
<h2 class="sectionedit4" id="restore_the_vios_settings_-_adapter_mappings">Restore the VIOS Settings - adapter mappings</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Exit the restricted shell <pre class="code"> oem_setup_env </pre>
<pre class="code"> set -o vi </pre>
</div>
</li>
<li class="level1"><div class="li"> Assign  the IP Address on the VIOS server to the ethernet port you noted / saved from the ifconfig -a command above.</div>
</li>
<li class="level1"><div class="li"> Export the host name of the server being patched <pre class="code"> export  host2patch=&lt;host&gt; </pre>
</div>
</li>
<li class="level1"><div class="li"> Log on to the NIM server and copy the viosbr backup you saved in the Pre_upgrade section from /preupgrade/reports/Pre_upgrade-${host2patch}-viosbr.tar.gz to the server you are upgrading <pre class="code"> scp /preupgrade/reports/Pre_upgrade-${host2patch}-viosbr.tar.gz {host2patch}:/home/padmin/cfgbackups/Pre_upgrade-${host2patch}-viosbr.tar.gz </pre>
</div>
</li>
<li class="level1"><div class="li"> Log back on to the VIOS server being patched as padmin and execute the following command <pre class="code">viosbr -restore -file /home/padmin/cfgbackups/Pre_upgrade-${host2patch}-viosbr.tar.gz </pre>

<p>
 This creates the initial devices
</p>
</div>
</li>
<li class="level1"><div class="li"> Shutdown and restart the server <pre class="code"> shutdown -force -restart </pre>
</div>
</li>
<li class="level1"><div class="li"> After the reboot log back into the server as padmin</div>
</li>
<li class="level1"><div class="li"> Run the viosbr resotore command again <pre class="code"> viosbr -restore -file /home/padmin/cfgbackups/Pre_upgrade-${host2patch}-viosbr.tar.gz </pre>

<p>
  This brings in the virtual devices. 
</p>
</div>
</li>
<li class="level1"><div class="li"> Shutdown and restart the server <pre class="code"> shutdown -force -restart </pre>
</div>
</li>
<li class="level1"><div class="li"> After the reboot log back into the server as padmin</div>
</li>
<li class="level1"><div class="li"> Run the viosbr resotore command again <pre class="code"> viosbr -restore -file /home/padmin/cfgbackups/Pre_upgrade-${host2patch}-viosbr.tar.gz </pre>

<p>
  This brings in the remaining SEA devices 
</p>
</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Exit the restricted shell <pre class="code"> oem_setup_env </pre>
<pre class="code"> set -o vi </pre>

<p>
 Check the status of the SEA and reset it. 
</p>
<pre class="code"> /usr/local/sbin/chksea |grep SEA | awk -F: &#039;{print $2}&#039;</pre>
</div>
</li>
<li class="level1"><div class="li"> <pre class="code">chdev -l {SEA from above command} -a ha_mode=sharing</pre>
</div>
</li>
<li class="level1"><div class="li"> Run the checkit command, it should retrun with no errors <pre class="code"> /usr/local/sbin/checkit </pre>
</div>
</li>
</ol>

</div>
<!-- EDIT4 SECTION "Restore the VIOS Settings - adapter mappings" [6604-] -->