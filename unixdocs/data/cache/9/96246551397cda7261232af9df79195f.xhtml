
<h1 class="sectionedit1" id="aix_vios_server_post_installation_work">AIX/VIOS Server Post installation work</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "AIX/VIOS Server Post installation work" [1-54] -->
<h2 class="sectionedit2" id="steps_from_the_nim_server_taitc118">Steps from the NIM Server (taitc118)</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Login to taitc118 and store the hostname<pre class="code">export targethost=&lt;host&gt;</pre>

<p>
&#039;host&#039; is the one being built.
</p>
</div>
</li>
<li class="level1"><div class="li"> Setup resolv.conf</div>
<ol>
<li class="level2"><div class="li"> North America<pre class="code">sudo scp /prod/images/etc/resolv.conf.na ${targethost}:/etc/resolv.conf</pre>
</div>
</li>
<li class="level2"><div class="li"> Europe<pre class="code">sudo scp /prod/images/etc/resolv.conf.eu ${targethost}:/etc/resolv.conf</pre>
</div>
</li>
<li class="level2"><div class="li"> Others - refer this document<a href="/doku.php?id=unix:setupresolv.conf" class="wikilink1" title="unix:setupresolv.conf"> Setup resolv.conf - Click here</a></div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Setup NTP</div>
<ol>
<li class="level2"><div class="li"> AIX<pre class="code">sudo scp /prod/images/etc/ntp.conf.aix ${targethost}:/etc/ntp.conf</pre>
</div>
</li>
<li class="level2"><div class="li"> VIOS<pre class="code">sudo scp /prod/images/etc/ntp.conf.vios ${targethost}:/home/padmin/config/ntp.conf</pre>
</div>
</li>
<li class="level2"><div class="li"> Refresh the daemons<pre class="code">sudo ssh ${targethost} &quot;chrctcp -S -a xntpd&quot;
sudo ssh ${targethost} &quot;ntpdate -u 10.1.1.1&quot;</pre>

<p>
Check the date and time
</p>
<pre class="code">sudo ssh ${targethost} date</pre>
</div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> Configure default ssh configs<pre class="code">sudo scp /prod/images/etc/global_ssh_config ${targethost}:/etc/ssh/ssh_config</pre>
</div>
</li>
<li class="level1"><div class="li"> Configure sysinter<pre class="code">sudo ssh ${targethost} &quot;mkdir -p /usr/local/bin&quot;
sudo scp /prod/images/csi/sysinter.aix5 ${targethost}:/usr/local/bin/sysinter.aix5
sudo ssh ${targethost} grep -q ^sysinter /etc/services
[[ ${?} -ne 0 ]] &amp;&amp; sudo ssh ${targethost} &quot;echo &#039;sysinter                40035/tcp&#039; &gt;&gt; /etc/services &quot;
sudo ssh ${targethost} grep -q ^sysinter /etc/inetd.conf
[[ ${?} -ne 0 ]] &amp;&amp; sudo ssh ${targethost} &quot;echo &#039;sysinter        stream  tcp     nowait  root    /usr/local/bin/sysinter.aix5&#039; &gt;&gt; /etc/inetd.conf &quot;
sudo ssh ${targethost} &quot;refresh -s inetd&quot;</pre>
</div>
</li>
<li class="level1"><div class="li"> Copy the scripts<pre class="code">sudo ssh ${targethost} &quot;mkdir -p /usr/local/scripts&quot;
sudo scp /usr/local/scripts/* ${targethost}:/usr/local/scripts/</pre>
</div>
</li>
<li class="level1"><div class="li"> Create a mksysb filesystem<pre class="code">sudo ssh ${targethost} &quot;crfs -vjfs2 -g rootvg -m /bkpmksb -A yes -t no -a size=20G&quot;
sudo ssh ${targethost} &quot;mount /bkpmksb&quot;</pre>
</div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:installothersoftwaresaix" class="wikilink1" title="unix:installothersoftwaresaix">On AIX and VIOS, install additional softwares</a></div>
</li>
<li class="level1"><div class="li"> Setup mksysb backup<pre class="code">sudo scp /prod/images/etc/id_dsa.mksysb ${targethost}:/usr/local/scripts/id_dsa.mksysb
sudo scp /prod/images/scripts/mksysb.sh ${targethost}:/usr/local/scripts/mksysb.sh</pre>
</div>
</li>
<li class="level1"><div class="li"> If AIX, Add the system to UUMA<pre class="code">sudo ssh taqa1a03 &quot;echo ${targethost} &gt;&gt; /home/oracle/uuma/hosts.txt&quot;</pre>
</div>
</li>
<li class="level1"><div class="li"> If AIX, configure snmpd<pre class="code">sudo scp /etc/snmpdv3.conf ${targethost}:/etc/snmpdv3.conf</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT2 SECTION "Steps from the NIM Server (taitc118)" [55-2453] -->
<h2 class="sectionedit3" id="steps_from_the_server_that_is_being_built">Steps from the server that is being built</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> Login to the server and perform the rest of the steps</div>
</li>
<li class="level1"><div class="li"> Configure network<pre class="code">sudo vi /etc/tunables/nextboot</pre>
<pre class="code">vmo:
        minperm% = &quot;3&quot;
        maxclient% = &quot;90&quot;
        maxperm% = &quot;90&quot;
        maxfree = &quot;1088&quot;
        minfree = &quot;960&quot;
        strict_maxclient = 1
        strict_maxperm = 0

no:
        udp_ephemeral_high = &quot;65500&quot;
        udp_ephemeral_low = &quot;9000&quot;
        tcp_ephemeral_high = &quot;65500&quot;
        tcp_ephemeral_low = &quot;9000&quot;
        rfc1323 = &quot;1&quot;
        ipignoreredirects = &quot;1&quot;
        ipforwarding = &quot;1&quot;
        ipsendredirects = &quot;0&quot;
        sb_max = &quot;1048576&quot;
        tcp_recvspace = &quot;262144&quot;
        tcp_sendspace = &quot;262144&quot;
        udp_recvspace = &quot;57344&quot;
        udp_sendspace = &quot;57344&quot;
        tcp_pmtu_discover = &quot;0&quot;
        udp_pmtu_discover = &quot;0&quot;

ioo:
        aio_minservers = &quot;8&quot;
        aio_maxservers = &quot;32&quot;
        aio_maxreqs = &quot;1024&quot;</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT3 SECTION "Steps from the server that is being built" [2454-3403] -->
<h3 class="sectionedit4" id="systems_connected_to_san">Systems connected to SAN</h3>
<div class="level3">
<ol>
<li class="level1"><div class="li"> If using SAN, Install EMC ODM filesets <strong>Not required on the VIO server if using NPIV. But it is needed on the VIO guests</strong></div>
<ol>
<li class="level2"><div class="li"> NFS mount the source for packages</div>
<ol>
<li class="level3"><div class="li"> Lincolnshire<pre class="code">sudo mkdir -p /mnt/emc ;sudo  mount taitc118:/prod/images/EMC /mnt/emc</pre>
</div>
</li>
<li class="level3"><div class="li"> Interexion<pre class="code">sudo mkdir -p /mnt/emc ;sudo  mount penmsv01:/prod/images/EMC /mnt/emc</pre>
</div>
</li>
</ol>
</li>
<li class="level2"><div class="li"> If using Clariion or VNX, please (re)install NAVIAGENT<pre class="code">sudo rm /etc/log/HostIdFile.txt</pre>

<p>
Remove it
</p>
<pre class="code">sudo installp -u NAVIAGENT</pre>

<p>
Install it
</p>
<pre class="code">sudo installp -acX -d /mnt/emc/NaviHostAgent-AIX-32-NA-en_US-6.29.6.0.35-1.lpp NAVIAGENT</pre>
</div>
<ol>
<li class="level3"><div class="li"> Configure the Navi agent</div>
<ol>
<li class="level4"><div class="li"> Interexion<pre class="code">sudo scp penmsv01:/prod/images/EMC/config/agent.config.int.clariion /etc/Navisphere/agent.config</pre>

<p>
And start it
</p>
<pre class="code">sudo /etc/rc.agent start</pre>
</div>
</li>
<li class="level4"><div class="li"> Edenkoben<pre class="code">sudo scp penmsv01:/prod/images/EMC/config/agent.config.ede.clariion /etc/Navisphere/agent.config</pre>

<p>
And start it
</p>
<pre class="code">sudo /etc/rc.agent start</pre>
</div>
</li>
<li class="level4"><div class="li"> Lincolnshire<pre class="code">sudo scp taitc118:/prod/images/EMC/config/agent.config.ldc.clariion /etc/Navisphere/agent.config</pre>

<p>
And start it
</p>
<pre class="code">sudo /etc/rc.agent start</pre>
</div>
</li>
<li class="level4"><div class="li"> Monroe<pre class="code">sudo scp taitc118:/prod/images/EMC/config/agent.config.mon.clariion /etc/Navisphere/agent.config</pre>

<p>
And start it
</p>
<pre class="code">sudo /etc/rc.agent start</pre>
</div>
</li>
<li class="level4"><div class="li"> Rybnik<pre class="code">sudo scp penmsv01:/prod/images/EMC/config/agent.config.ryb.clariion /etc/Navisphere/agent.config</pre>

<p>
And start it
</p>
<pre class="code">sudo /etc/rc.agent start</pre>
</div>
</li>
<li class="level4"><div class="li"> GrassLake<pre class="code">sudo scp taitc118:/prod/images/EMC/config/agent.config.glk.clariion /etc/Navisphere/agent.config</pre>

<p>
And start it
</p>
<pre class="code">sudo /etc/rc.agent start</pre>
</div>
</li>
<li class="level4"><div class="li"> St Truiden<pre class="code">sudo scp penmsv01:/prod/images/EMC/config/agent.config.str.clariion /etc/Navisphere/agent.config</pre>

<p>
And start it
</p>
<pre class="code">sudo /etc/rc.agent start</pre>
</div>
</li>
</ol>
</li>
</ol>
</li>
<li class="level2"><div class="li"> If using powerpath<pre class="code">sudo installp -acX -d /mnt/emc/ODM/$(oslevel)-latest EMC.Symmetrix.aix.rte EMC.CLARiiON.aix.rte EMC.CLARiiON.fcp.rte EMC.Symmetrix.fcp.rte</pre>
</div>
</li>
<li class="level2"><div class="li"> If using MPIO<pre class="code">sudo installp -acX -d /mnt/emc/ODM/$(oslevel)-latest EMC.Symmetrix.aix.rte EMC.CLARiiON.aix.rte EMC.CLARiiON.fcp.MPIO.rte EMC.Symmetrix.fcp.MPIO.rte</pre>
</div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> If ODM is installed, perform a reboot now.<pre class="code">sudo shutdown -Fr</pre>
</div>
</li>
<li class="level1"><div class="li"> On an NPIV LPAR ( not the VIOS ), enable round robin.<pre class="code">lsdev -Ccdisk | grep MPIO | awk &#039;{print $1}&#039; | xargs -n1 sudo chdev -a algorithm=round_robin -a reserve_policy=no_reserve -Pl</pre>
</div>
</li>
<li class="level1"><div class="li"> Cleanup cron jobs<pre class="code">for file in $(sudo ls -1 /var/spool/cron/crontabs | egrep -v &quot;^root$|^adm$|^sys$|^uucp$|^esaadmin$&quot;)
do
   sudo rm -i /var/spool/cron/crontabs/${file} # Remove the -i if you are confident
done</pre>
</div>
</li>
<li class="level1"><div class="li"> Enable cron if disabled<pre class="code">sudo mkitab cron:23456789:respawn:/usr/sbin/cron</pre>
</div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:syslogconfigtenneco#configuring_an_aix_host_to_send_errpt_entries_to_centralized_syslog_server" class="wikilink1" title="unix:syslogconfigtenneco">Enable Centralised syslog</a></div>
</li>
<li class="level1"><div class="li"> Configure FC <abbr title="Small Computer System Interface">SCSI</abbr> attributes<pre class="code">for FSCSI in $(lscfg | grep fscsi | awk &#039;{print $2}&#039; )
do
   sudo chdev -Pl ${FSCSI} -a fc_err_recov=fast_fail -a dyntrk=yes
done</pre>
</div>
</li>
<li class="level1"><div class="li"> Create a file /var/adm/.information which explains the host&#039;s role and mksysb target e.g.<pre class="code">sudo vi /var/adm/.information</pre>

<p>
Enter these details
</p>
<pre class="code">mksysbhost:
location:
rack:
virtual:
virtualization:
physhost:
appname:
role:
contacts:
function:
asset owner:
asset owner email:ta-unix@tenneco.com
asset owner phone:+1-847-482-6440
application owner:
department:GIOS
status:Active
part number: IBM AIX
vendor Service Tag:N/A
express code:N/A
company asset tag:N/A
cage/room:LDC Datacenter
rack position:
private IP: N/A
mac address:
wwn:
warranty start date:08/01/2013
warranty end date:07/31/2016
warranty number:1HI17358CA
warranty type:24x7x4
maintenance start date:08/01/2013
maintenance end date:07/31/2016
maintenance number:1HI17358CA
maintenance type: 24x7x4
vendor:IBM
classification level:Critical
business criticality:High</pre>
</div>
</li>
<li class="level1"><div class="li"> Add the TMOUT variable to /etc/profile if it wasn&#039;t a clone<pre class="code">sudo vi /etc/profile</pre>
<pre class="code"># Automatic logout, include in export line if uncommented
TMOUT=3600
readonly TMOUT</pre>
</div>
</li>
<li class="level1"><div class="li"> <a href="/doku.php?id=unix:usersandgroups" class="wikilink1" title="unix:usersandgroups">Create basic unix group and users</a></div>
</li>
<li class="level1"><div class="li"> Schedule standard cron jobs<pre class="code">sudo crontab -e</pre>

<p>
Add these
</p>
<pre class="code"># Customized for Tenneco
59 21 * * 4 /usr/local/scripts/cr_altdisk.sh 1&gt;/dev/null 2&gt;&amp;1
00 23 * * * /usr/local/scripts/mksysb.sh 1&gt;/dev/null 2&gt;&amp;1
03 03 * * 6 /usr/local/scripts/clean_var 1&gt;/dev/null 2&gt;&amp;1
30 23 * * 6 /usr/local/scripts/rpt_config.sh 1&gt;/dev/null 2&gt;&amp;1
05 * * * * /usr/local/scripts/stales.sh 1&gt;/dev/null 2&gt;&amp;1</pre>
</div>
</li>
<li class="level1"><div class="li"> If booting from SAN, Create an alt_disk_copy.<pre class="code">sudo alt_disk_copy -B -d hdiskX</pre>
</div>
</li>
<li class="level1"><div class="li"> If VIO install updates</div>
<ol>
<li class="level2"><div class="li"> <a href="/doku.php?id=unix:vioupdatesinstall" class="wikilink1" title="unix:vioupdatesinstall">Install updates on VIO servers.</a></div>
</li>
</ol>
</li>
<li class="level1"><div class="li"> If booting from internal disks, Mirror rootvg</div>
<ol>
<li class="level2"><div class="li"> AIX<pre class="code">extendvg rootvg hdiskX
sudo mirrorvg -c2 rootvg
sudo bosboot -ad /dev/hdiskX
sudo bootlist -m normal hdiskX hdiskY</pre>
</div>
</li>
<li class="level2"><div class="li"> VIOS</div>
<ol>
<li class="level3"><div class="li"> Mirror boot disk<pre class="code">extendvg -f rootvg hdiskX
mirrorios -f hdiskX</pre>

<p>
<strong>This will reboot the VIOS</strong>
</p>
</div>
<ol>
<li class="level4"><div class="li"> For some reason, IBM does not set up bootlist, so let us do it<pre class="code">oem_setup_env</pre>
<pre class="code">bootlist -m normal hdiskX hdiskY</pre>
</div>
</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li class="level1"><div class="li"> If AIX,Send ticket for netbackup</div>
</li>
<li class="level1"><div class="li"> Send ticket for Monitoring</div>
</li>
<li class="level1"><div class="li"> If AIX, Send a ticket to “GIOS Operations - Entitlement” to add the systems.</div>
</li>
<li class="level1"><div class="li"> Do a final reboot<pre class="code">sudo shutdown -Fr</pre>
</div>
</li>
<li class="level1"><div class="li"> Login to the NIM server and perform a NIM client cleanup<pre class="code">sudo nim -F -o reset &lt;hostname&gt;
sudo nim -o deallocate -a subclass=all &lt;hostname&gt;</pre>
</div>
</li>
</ol>

</div>
<!-- EDIT4 SECTION "Systems connected to SAN" [3404-] -->